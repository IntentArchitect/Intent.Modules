// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.RichDomain.Templates.EntityBehaviourBase
{
    using Intent.SoftwareFactory.MetaModels.UMLModel;
    using Intent.MetaModel.UMLModel;
    using Intent.SoftwareFactory.Templates;
    using System;
    using System.IO;
    using System.Diagnostics;
    using System.Linq;
    using System.Collections;
    using System.Collections.Generic;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class DomainEntityBehaviourBaseTemplate : IntentRoslynProjectItemTemplateBase<Class>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(" \r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing Intent.Framework.Dom" +
                    "ain;\r\nusing Intent.CodeGen;\r\n\r\n[assembly: DefaultIntentManaged(Mode.Fully)]\r\n\r\nn" +
                    "amespace ");
            
            #line 23 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 25 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
 string typedIdentifier = null;
   if (Model.IsEntity())
   {
       typedIdentifier = GetEntityIdTypeName(Model);
   }
            
            #line default
            #line hidden
            this.Write("    //Full Interface\r\n    public partial interface I");
            
            #line 31 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Behaviour");
            
            #line 31 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((Model.IsSubClass()) ? " : I" + Model.ParentClass.Name.ToPascalCase() + "" : ""));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        ");
            
            #line 33 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" State { get; }\r\n\r\n        ");
            
            #line 35 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IdentifierType()));
            
            #line default
            #line hidden
            this.Write(" Id { get; }\r\n");
            
            #line 36 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  foreach (var attribute in Model.Attributes)
    {
        if (attribute.IsAssociationAttribute)
            continue;    

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 41 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.HasComplexDomainType() ? attribute.ComplexDomainType() : attribute.DomainType()));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 41 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" { get;}\r\n");
            
            #line 42 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
    }
    foreach (var association in Model.Associations)
    {
        if (!association.Navigable)
            continue;

    if (association.OtherAssociationEnd().Multiplicity == Multiplicity.Many && association.Multiplicity == Multiplicity.One)
        {
            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 50 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.IdentifierType()));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 50 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.IdentifierName()));
            
            #line default
            #line hidden
            this.Write(" { get; }\r\n");
            
            #line 51 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\r\n        ");
            
            #line 53 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.Type("I", "", readOnly: true)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 53 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.Name().ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" { get;}\r\n");
            
            #line 54 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 56 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  foreach (var operation in Model.Operations.Where(x => x.IsQueryBehaviour()))
    {
        string returnType = operation.ReturnType != null ? operation.ReturnType.DomainType() : "void";
        string parameterDefinitions = operation.Parameters.Any() ? operation.Parameters.Select(x => x.DomainType() + " " + x.Name.ToCamelCase()).Aggregate((x, y) => x + ", " + y) : "";
        
            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 61 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 61 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 61 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterDefinitions));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 62 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
    }
            
            #line default
            #line hidden
            
            #line 63 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  foreach (var operation in Model.Operations.Where(x => x.IsCommandBehaviour()))
    {
        string returnType = operation.ReturnType != null ? operation.ReturnType.DomainType() : "void";
        string parameterDefinitions = operation.Parameters.Any() ? operation.Parameters.Select(x => x.DomainType() + " " + x.Name.ToCamelCase()).Aggregate((x, y) => x + ", " + y) : "";
        
            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 68 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 68 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 68 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterDefinitions));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 69 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
    }
            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n    // Rich Domain Interface Implementation\r\n    public partial class ");
            
            #line 73 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Behaviour : ");
            
            #line 73 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((Model.IsSubClass()) ? Model.ParentClass.Name.ToPascalCase() + "Behaviour, " : ""));
            
            #line default
            #line hidden
            this.Write("I");
            
            #line 73 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Behaviour\r\n    {\r\n        private readonly ");
            
            #line 75 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" _state;\r\n        \r\n        public ");
            
            #line 77 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Behaviour(");
            
            #line 77 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" state)");
            
            #line 77 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((Model.IsSubClass()) ? " : base (state)" : ""));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            if (state == null) \r\n            {\r\n                thro" +
                    "w new Exception(\"Parameter \'state\' cannot be null in constructing ");
            
            #line 81 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Behaviour\");\r\n            }\r\n            _state = state;\r\n        }\r\n\r\n");
            
            #line 86 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  var className = Model.Name.ToPascalCase();
    if (Model.IsEntity())
    {
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 89 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typedIdentifier));
            
            #line default
            #line hidden
            this.Write(" Id \r\n        { \r\n            get { return ");
            
            #line 91 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typedIdentifier));
            
            #line default
            #line hidden
            this.Write(".Create(_state.Id);  }\r\n        }\r\n\r\n");
            
            #line 94 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  }

    foreach (var attribute in Model.Attributes)
    {
        if (attribute.IsAssociationAttribute)
            continue;    
    
            
            #line default
            #line hidden
            
            #line 101 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
        if (attribute.HasComplexDomainType())
        { 
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 103 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ComplexDomainType()));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 103 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" \r\n        {\r\n            get { return new ");
            
            #line 105 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.ComplexDomainType()));
            
            #line default
            #line hidden
            this.Write("(_state.");
            
            #line 105 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("); }\r\n            set { _state.");
            
            #line 106 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" = value; }\r\n        }\r\n\r\n");
            
            #line 109 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
        }
        else
        { 
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 112 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.DomainType()));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 112 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" \r\n        {\r\n            get { return _state.");
            
            #line 114 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("; }\r\n            set { _state.");
            
            #line 115 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" = value; }\r\n        }\r\n\r\n");
            
            #line 118 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
        }
            
            #line default
            #line hidden
            
            #line 119 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 120 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
    foreach (var association in Model.Associations)
    {
        if (!association.Navigable)
            continue;

        if (association.OtherAssociationEnd().Multiplicity == Multiplicity.Many && association.Multiplicity == Multiplicity.One)
        {
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 127 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.IdentifierType()));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 127 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.IdentifierName()));
            
            #line default
            #line hidden
            this.Write(" \r\n        {\r\n            get { return ");
            
            #line 129 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.IdentifierType()));
            
            #line default
            #line hidden
            this.Write(".Create(_state.");
            
            #line 129 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.IdentifierName()));
            
            #line default
            #line hidden
            this.Write("); }\r\n            set { _state.");
            
            #line 130 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.IdentifierName()));
            
            #line default
            #line hidden
            this.Write(" = value; }\r\n        }\r\n\r\n");
            
            #line 133 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 134 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.Type("I", "", readOnly: true)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 134 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.Name().ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" \r\n        { \r\n            get { return _state.");
            
            #line 136 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.Name().ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("; }\r\n            set { _state.");
            
            #line 137 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.Name().ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 137 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(association.Type("", "", readOnly: false)));
            
            #line default
            #line hidden
            this.Write(")value; }\r\n        }\r\n");
            
            #line 139 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 140 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" State\r\n        {\r\n            get { return _state; }\r\n        }\r\n");
            
            #line 144 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PublicProperties(Model)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 145 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
    if (Model.IsAggregateRoot() && !Model.IsSubClass()) 
    {

            
            #line default
            #line hidden
            this.Write(@"        public DateTime? CreateDateTime
        {
            get { return _state.CreateDateTime; }
            set { _state.CreateDateTime = value; }
        }

        public DateTime? UpdateDateTime
        {
            get { return _state.UpdateDateTime; }
            set { _state.UpdateDateTime = value; }
        }

        public string UpdatedBy
        {
            get { return _state.UpdatedBy; }
            set { _state.UpdatedBy = value; }
        }

");
            
            #line 166 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 167 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
  foreach (var operation in Model.Operations.Where(x => x.IsQueryBehaviour()))
    {
        string returnType = operation.ReturnType != null ? operation.ReturnType.DomainType() : "void";
        string parameterDefinitions = operation.Parameters.Any() ? operation.Parameters.Select(x => x.DomainType() + " " + x.Name.ToCamelCase()).Aggregate((x, y) => x + ", " + y) : "";
        string parameters = operation.Parameters.Any() ? operation.Parameters.Select(x => x.Name.ToCamelCase()).Aggregate((x, y) => x + ", " + y) : "";
        
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 173 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 173 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 173 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameterDefinitions));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            return _state.");
            
            #line 175 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 175 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameters));
            
            #line default
            #line hidden
            this.Write(");\r\n        }\r\n\r\n");
            
            #line 178 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
    }
            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n    public static class ");
            
            #line 181 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Extensions\r\n    {\r\n        public static I");
            
            #line 183 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Behaviour Behaviours(this I");
            
            #line 183 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" state)\r\n        {\r\n            return new ");
            
            #line 185 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Behaviour((");
            
            #line 185 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(") state);\r\n        }\r\n    }\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        private global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost hostValue;
        /// <summary>
        /// The current host for the text templating engine
        /// </summary>
        public virtual global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost Host
        {
            get
            {
                return this.hostValue;
            }
            set
            {
                this.hostValue = value;
            }
        }
        
        #line 190 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
 

public void AddCheckConstraint(AssociationEnd associationEnd)
{
    string checkFunc = null;
    if (associationEnd.MaxMultiplicity == "1" && associationEnd.MinMultiplicity == "1")
    {
        checkFunc = associationEnd.Name().ToPascalCase() + " != null";
    }
    else if (associationEnd.MaxMultiplicity == "*")
    {
        checkFunc = associationEnd.Name().ToPascalCase() + ".Count >= " + associationEnd.MinMultiplicity;
    }
    else 
    {
        checkFunc = string.Format("{0}.Count >= {1} && {0}.Count <= {2}", associationEnd.Name().ToPascalCase(), associationEnd.MinMultiplicity, associationEnd.MaxMultiplicity) ;
    }

        
        #line default
        #line hidden
        
        #line 207 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
this.Write("                RequiredMultiplcityChecks[\"");

        
        #line default
        #line hidden
        
        #line 208 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(associationEnd.Name().ToPascalCase()));

        
        #line default
        #line hidden
        
        #line 208 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
this.Write("\"] = () => ");

        
        #line default
        #line hidden
        
        #line 208 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(checkFunc));

        
        #line default
        #line hidden
        
        #line 208 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"
this.Write(" ;\r\n");

        
        #line default
        #line hidden
        
        #line 209 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.RichDomain\Templates\EntityBehaviourBase\DomainEntityBehaviourBaseTemplate.tt"

}

public string GetEntityIdTypeName( Class umlClass)
{
       string guidName = umlClass.Name.ToPascalCase() + "Id";
       if (umlClass.IsView())
       {
           guidName = guidName.Replace("View", "");
       }
       return guidName;
}

public string GetBaseClass(Class umlClass) {
    if (umlClass.ParentClass != null)
        return umlClass.ParentClass.Name;

    if (umlClass.IsEntity())
        return "EntityBase";

    return "Object";
}

public string GetInterfaces(Class umlClass) {
    if (umlClass.IsAggregateRoot())
    {
        return ", IAggregateRoot, IVersionedEntity, IEntity";
    }
    if (umlClass.IsEntity())
    {
        return ", IEntity";
    }
    return "";
}

public string GetBaseDataInterfaces(Class umlClass) 
{
    List<string> result = new List<string>();        

    if (umlClass.IsSubClass())
        result.Add("I" + umlClass.ParentClass.Name.ToPascalCase() + "Data");

    if (umlClass.IsAggregateRoot())
        result.Add("IAggregateRoot");

    if (umlClass.IsEntity())
        result.Add("IEntity");

    return string.Join(",", result);
}

public bool MustCreateForeignKeyPropertyIfApplicable(AssociationEnd associationEnd, out string identifierType, out string propertyName) 
{
    identifierType = "";
    propertyName = "";

    if (associationEnd.RelationshipType == RelationshipType.OneToMany)
    {
        var otherClass = associationEnd.Class;
        identifierType = GetEntityIdTypeName(otherClass) ;
        propertyName = associationEnd.Name().ToPascalCase() + "Id";
        return true;
    }

    return false;
}

public string CreateForeignKeyPropertyIfApplicable(AssociationEnd association) 
{
    if (association.RelationshipType == RelationshipType.OneToMany)
        return string.Format("public Guid{0} {1}Id ", association.IsMandatory() ? "" : "?", association.Name().ToPascalCase()) + "{ get; set; }";

    return String.Empty;
}

public string GetAssociationReturn(AssociationEnd association) 
{
    if (association.IsCollection())
    {
        return String.Format("{0} ?? ({0} = new {1}())", association.Name().ToPrivateMember(), association.ConstructorType());
    }
    return association.Name().ToPrivateMember();
}

public string GetAssociatedInterface( Class umlClass)
{
    if (umlClass.IsAggregateRoot())
    {
        return "I" + umlClass.Name + "Data";
    }
    else
    {
        return "I" + umlClass.Name;
    }
}

public Dictionary<string, string> GetSetPropertyValidations(Intent.SoftwareFactory.MetaModels.UMLModel.UmlAttribute attribute) 
{
    var result = new Dictionary<string, string>();
    if (attribute.Type == "string" && attribute.IsMandatory) 
    {
        result.Add("string.IsNullOrEmpty(value)", attribute.Name + " is mandatory.");
    }

    var minLength = attribute.Stereotypes.GetTagValue<int?>("Text", "MinLength");
    if (minLength != null)
    {
        result.Add("!string.IsNullOrEmpty(value) && value.Length < " + minLength, attribute.Name + " cannot be less than " + minLength + " characters.");
    }

    var maxLength = attribute.Stereotypes.GetTagValue<int?>("Text", "MaxLength");
    if (maxLength != null)
    {
        result.Add("!string.IsNullOrEmpty(value) && value.Length > " + maxLength, attribute.Name + " cannot be more than " + maxLength + " characters.");
    }

    var minValue = attribute.Stereotypes.GetTagValue<int?>("Numeric", "MinValue");
    if (minValue != null )
    {
        result.Add("value < " + minValue, attribute.Name + " cannot be less than " + minValue + ".");
    }

    var maxValue = attribute.Stereotypes.GetTagValue<int?>("Numeric", "MaxValue");
    if (maxValue != null)
    {
        result.Add("value > " + maxValue, attribute.Name + " cannot be more than " + maxValue + ".");
    }

    var maxDecimalPlaces = attribute.Stereotypes.GetTagValue<int?>("Numeric", "MaxDecimalPlaces");
    if (maxDecimalPlaces != null)
    {
        result.Add(string.Format("(value * {0}) != Math.Floor(value * {0})", Math.Pow(10, maxDecimalPlaces.Value)), attribute.Name + " cannot have more than " + maxDecimalPlaces + " decimal places.");
    }

    return result;
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}

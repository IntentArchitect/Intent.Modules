// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.IdentityServer4.InMemoryStore.Templates.TestUsers
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules\Modules\Intent.Modules.IdentityServer4.InMemoryStore\Templates\TestUsers\TestUsers.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class TestUsers : CSharpTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using IdentityModel;\r\nusing IdentityServer4.Test;\r\nusing System.Collections.Gener" +
                    "ic;\r\nusing System.Security.Claims;\r\n\r\n[assembly: DefaultIntentManaged(Mode.Fully" +
                    ")]\r\n\r\nnamespace ");
            
            #line 17 "C:\Dev\Intent.Modules\Modules\Intent.Modules.IdentityServer4.InMemoryStore\Templates\TestUsers\TestUsers.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public static class ");
            
            #line 19 "C:\Dev\Intent.Modules\Modules\Intent.Modules.IdentityServer4.InMemoryStore\Templates\TestUsers\TestUsers.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        public static List<TestUser> Users = new List<TestUser>\r\n       " +
                    " {\r\n            new TestUser{SubjectId = \"818727\", Username = \"alice\", Password " +
                    "= \"alice\",\r\n                Claims =\r\n                {\r\n                    new" +
                    " Claim(JwtClaimTypes.Name, \"Alice Smith\"),\r\n                    new Claim(JwtCla" +
                    "imTypes.GivenName, \"Alice\"),\r\n                    new Claim(JwtClaimTypes.Family" +
                    "Name, \"Smith\"),\r\n                    new Claim(JwtClaimTypes.Email, \"AliceSmith@" +
                    "email.com\"),\r\n                    new Claim(JwtClaimTypes.EmailVerified, \"true\"," +
                    " ClaimValueTypes.Boolean),\r\n                    new Claim(JwtClaimTypes.WebSite," +
                    " \"http://alice.com\"),\r\n                    new Claim(JwtClaimTypes.Address, @\"{ " +
                    "\'street_address\': \'One Hacker Way\', \'locality\': \'Heidelberg\', \'postal_code\': 691" +
                    "18, \'country\': \'Germany\' }\", IdentityServer4.IdentityServerConstants.ClaimValueT" +
                    "ypes.Json),\r\n                    new Claim(JwtClaimTypes.Role, \"TestRole\")\r\n    " +
                    "            }\r\n            },\r\n            new TestUser{SubjectId = \"88421113\", " +
                    "Username = \"bob\", Password = \"bob\", \r\n                Claims = \r\n               " +
                    " {\r\n                    new Claim(JwtClaimTypes.Name, \"Bob Smith\"),\r\n           " +
                    "         new Claim(JwtClaimTypes.GivenName, \"Bob\"),\r\n                    new Cla" +
                    "im(JwtClaimTypes.FamilyName, \"Smith\"),\r\n                    new Claim(JwtClaimTy" +
                    "pes.Email, \"BobSmith@email.com\"),\r\n                    new Claim(JwtClaimTypes.E" +
                    "mailVerified, \"true\", ClaimValueTypes.Boolean),\r\n                    new Claim(J" +
                    "wtClaimTypes.WebSite, \"http://bob.com\"),\r\n                    new Claim(JwtClaim" +
                    "Types.Address, @\"{ \'street_address\': \'One Hacker Way\', \'locality\': \'Heidelberg\'," +
                    " \'postal_code\': 69118, \'country\': \'Germany\' }\", IdentityServer4.IdentityServerCo" +
                    "nstants.ClaimValueTypes.Json),\r\n                    new Claim(\"location\", \"somew" +
                    "here\"),\r\n                    new Claim(JwtClaimTypes.Role, \"TestRole\")\r\n        " +
                    "        }\r\n            }\r\n        };\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}

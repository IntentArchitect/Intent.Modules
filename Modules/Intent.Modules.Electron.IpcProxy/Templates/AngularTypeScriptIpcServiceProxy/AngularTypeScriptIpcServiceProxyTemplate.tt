<#@ template  debug="true"  inherits="TypeScriptTemplateBase<ServiceModel>" #>
<#@ output extension=".ts" #>
<#@ Assembly Name="System.Core" #>
<#@ import namespace="Intent.Modelers.Services.Api" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="System" #>
namespace <#= Namespace #> {
    export class <#=Model.Name#>Proxy {
        static $inject = ["IpcProxyService"];
        constructor(
            private readonly ipcProxyService: IpcProxyService
        ) { }
<#      foreach (var o in Model.Operations)
        {

#>

        <#= o.Name.ToCamelCase() #>(<#= GetMethodDefinitionParameters(o) #>): ng.IPromise<<#= GetReturnType(o) #>> {
            return this.ipcProxyService.callMethod<<#= GetReturnType(o) #>>("<#= TypeName #>", "<#= o.Name #>"<#= GetMethodCallParameters(o) #>);
        }
<#
        }
#>
    }

    angular.module("App").service("<#=Model.Name#>Proxy", <#=Model.Name#>Proxy);
}

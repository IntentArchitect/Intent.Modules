<?xml version="1.0" encoding="utf-8"?>
<class id="107b394c-a4d3-4f47-a9e1-05d4e6495e75" type="Suggestions Settings" typeId="f68b5446-19f2-402d-a940-f62b3a592906">
  <name>Suggestions</name>
  <display>Suggestions</display>
  <isAbstract>false</isAbstract>
  <sort-children>by-type-then-by-name</sort-children>
  <genericTypes />
  <isMapped>false</isMapped>
  <parentFolderId>79480502-761f-4883-a4f3-3b03654db367</parentFolderId>
  <packageId>31710880-215c-4fed-9c79-a129a4b9cdb1</packageId>
  <packageName>Intent.Modelers.Domain.Events</packageName>
  <stereotypes />
  <metadata />
  <childElements>
    <childElement id="955ad1ac-526a-4089-93f0-a5466970a005" type="Suggestion" typeId="0c21ab10-e87b-4e88-ab44-38ea7adf514a">
      <name>Publish Domain Event</name>
      <display>Publish Domain Event: Operation</display>
      <isAbstract>false</isAbstract>
      <genericTypes />
      <typeReference id="60b15c7c-2d9d-4cbf-bf7d-1f69af5ef2b6">
        <typeId>e042bb67-a1df-480c-9935-b26210f78591</typeId>
        <isNavigable>true</isNavigable>
        <isNullable>false</isNullable>
        <isCollection>false</isCollection>
        <isRequired>true</isRequired>
        <typePackageName>Intent.Common.Types</typePackageName>
        <typePackageId>870ad967-cbd4-4ea9-b86d-9c3a5d55ea67</typePackageId>
        <stereotypes />
        <genericTypeParameters />
      </typeReference>
      <isMapped>false</isMapped>
      <parentFolderId>107b394c-a4d3-4f47-a9e1-05d4e6495e75</parentFolderId>
      <packageId>31710880-215c-4fed-9c79-a129a4b9cdb1</packageId>
      <packageName>Intent.Modelers.Domain.Events</packageName>
      <stereotypes>
        <stereotype stereotypeDefinitionId="daf7d9b3-9c10-4286-b30e-7edb2e62f10e" name="Settings">
          <addedByDefault>true</addedByDefault>
          <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
          <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
          <properties>
            <property name="bd242929-b399-4d13-88c0-d046b7161d41" display="Locations" value="[&quot;Diagram&quot;,&quot;Model&quot;]" isActive="true" />
            <property name="8d51eb08-f4a9-4703-ba70-de87c9417d46" display="Filter Function" value="let publishDomainEventAssociation = &quot;4c0cc50b-8a9d-43cd-b731-9f354f69f3c9&quot;;&#xD;&#xA;&#xD;&#xA;let isAggregateRoot = !element.getParent()?.getAssociations(&quot;Association&quot;)&#xD;&#xA;    .some(x =&gt; x.isSourceEnd() &amp;&amp; !x.typeReference.isCollection &amp;&amp; !x.typeReference.isNullable);&#xD;&#xA;&#xD;&#xA;return element.getAssociations(publishDomainEventAssociation).length == 0 &amp;&amp; isAggregateRoot;" isActive="true" />
            <property name="ecb7abbb-0297-486e-bd99-cded3226d2a4" display="Display Function" isActive="true" />
            <property name="bfd10a66-2f93-4ffd-bf35-633ff96e7e6c" display="Script" value="const domainEventId = &quot;0814e459-fb9b-47db-b7eb-32ce30397e8a&quot;;&#xD;&#xA;const publishDomainEventId = &quot;17046427-14e2-4081-8463-ef16c0fda399&quot;;&#xD;&#xA;&#xD;&#xA;let position = getCurrentDiagram().getVisual(element.id)?.getDimensions().getTopRight();&#xD;&#xA;if (position) {&#xD;&#xA;    position = getCurrentDiagram().findEmptySpace({ x: position.x + 100, y: position.y - 5 });&#xD;&#xA;    const domainEvent = getCurrentDiagram().createElement(domainEventId, &quot;NewDomainEvent&quot;, position);&#xD;&#xA;    const association = createAssociation(publishDomainEventId, element.id, domainEvent.id)&#xD;&#xA;    getCurrentDiagram().layoutVisuals([association.id]);&#xD;&#xA;    &#xD;&#xA;    //Allow user to rename&#xD;&#xA;    await domainEvent.enableEditing();&#xD;&#xA;    await association.launchAdvancedMappingDialog();&#xD;&#xA;}" isActive="true" />
            <property name="1d9dd994-46c3-4fdc-a24b-c69f689ca283" display="Dependencies" value="[]" isActive="true" />
          </properties>
        </stereotype>
      </stereotypes>
      <metadata />
      <childElements />
    </childElement>
    <childElement id="d9e9102f-0622-4148-b62c-9af39f8c5358" type="Suggestion" typeId="0c21ab10-e87b-4e88-ab44-38ea7adf514a">
      <name>Publish Domain Event</name>
      <display>Publish Domain Event: Class Constructor</display>
      <isAbstract>false</isAbstract>
      <genericTypes />
      <typeReference id="00b5b5fa-50c9-47af-991e-5e83b699d138">
        <typeId>dec2bd12-4699-4f45-8ec9-3b62dc692d2b</typeId>
        <isNavigable>true</isNavigable>
        <isNullable>false</isNullable>
        <isCollection>false</isCollection>
        <isRequired>true</isRequired>
        <typePackageName>Intent.Modelers.Domain</typePackageName>
        <typePackageId>6572b98d-5e13-4d4b-9ffc-820057da974e</typePackageId>
        <stereotypes />
        <genericTypeParameters />
      </typeReference>
      <isMapped>false</isMapped>
      <parentFolderId>107b394c-a4d3-4f47-a9e1-05d4e6495e75</parentFolderId>
      <packageId>31710880-215c-4fed-9c79-a129a4b9cdb1</packageId>
      <packageName>Intent.Modelers.Domain.Events</packageName>
      <stereotypes>
        <stereotype stereotypeDefinitionId="daf7d9b3-9c10-4286-b30e-7edb2e62f10e" name="Settings">
          <addedByDefault>true</addedByDefault>
          <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
          <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
          <properties>
            <property name="bd242929-b399-4d13-88c0-d046b7161d41" display="Locations" value="[&quot;Diagram&quot;,&quot;Model&quot;]" isActive="true" />
            <property name="8d51eb08-f4a9-4703-ba70-de87c9417d46" display="Filter Function" value="let publishDomainEventAssociation = &quot;4c0cc50b-8a9d-43cd-b731-9f354f69f3c9&quot;;&#xD;&#xA;&#xD;&#xA;let isAggregateRoot = !element.getParent()?.getAssociations(&quot;Association&quot;)&#xD;&#xA;    .some(x =&gt; x.isSourceEnd() &amp;&amp; !x.typeReference.isCollection &amp;&amp; !x.typeReference.isNullable);&#xD;&#xA;&#xD;&#xA;return element.getAssociations(publishDomainEventAssociation).length == 0 &amp;&amp; isAggregateRoot;" isActive="true" />
            <property name="ecb7abbb-0297-486e-bd99-cded3226d2a4" display="Display Function" isActive="true" />
            <property name="bfd10a66-2f93-4ffd-bf35-633ff96e7e6c" display="Script" value="const domainEventId = &quot;0814e459-fb9b-47db-b7eb-32ce30397e8a&quot;;&#xD;&#xA;const publishDomainEventId = &quot;17046427-14e2-4081-8463-ef16c0fda399&quot;;&#xD;&#xA;&#xD;&#xA;let position = getCurrentDiagram().getVisual(element.id)?.getDimensions().getTopRight();&#xD;&#xA;if (position) {&#xD;&#xA;    position = getCurrentDiagram().findEmptySpace({ x: position.x + 100, y: position.y - 5 });&#xD;&#xA;    const domainEvent = getCurrentDiagram().createElement(domainEventId, &quot;NewDomainEvent&quot;, position);&#xD;&#xA;    const association = createAssociation(publishDomainEventId, element.id, domainEvent.id)&#xD;&#xA;    getCurrentDiagram().layoutVisuals([association.id]);&#xD;&#xA;    &#xD;&#xA;    //Allow user to rename&#xD;&#xA;    await domainEvent.enableEditing();&#xD;&#xA;    await association.launchAdvancedMappingDialog();&#xD;&#xA;}" isActive="true" />
            <property name="1d9dd994-46c3-4fdc-a24b-c69f689ca283" display="Dependencies" value="[]" isActive="true" />
          </properties>
        </stereotype>
      </stereotypes>
      <metadata />
      <childElements />
    </childElement>
  </childElements>
</class>
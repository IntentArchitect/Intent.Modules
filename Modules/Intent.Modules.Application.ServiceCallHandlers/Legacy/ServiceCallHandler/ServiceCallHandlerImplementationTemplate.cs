// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.Application.ServiceCallHandlers.Legacy.ServiceCallHandler
{
    using Intent.SoftwareFactory.MetaModels.Class;
    using Intent.SoftwareFactory.MetaModels.Service;
    using Intent.SoftwareFactory.Templates;
    using System;
    using System.IO;
    using System.Diagnostics;
    using System.Linq;
    using System.Collections;
    using System.Collections.Generic;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class ServiceCallHandlerImplementationTemplate : Intent.SoftwareFactory.Templates.IntentRoslynProjectItemTemplateBase<ServiceOperationModel>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(" \r\n");
            this.Write(" \r\n");
            
            #line 16 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"


            
            #line default
            #line hidden
            this.Write("using Intent.CodeGen;\r\nusing System;\r\nusing System.Linq;\r\nusing System.Collection" +
                    "s.Generic;\r\n");
            
            #line 22 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DependencyUsings));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n[assembly: DefaultIntentManaged(Mode.Ignore)]\r\n\r\nnamespace ");
            
            #line 26 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    [IntentManaged(Mode.Merge)]\r\n    public class ");
            
            #line 29 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" \r\n    {\r\n\t\t[IntentInitialGen]\r\n\r\n        public ");
            
            #line 33 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n        }\r\n\r\n        [IntentManaged(Mode.Merge, Body = Mode.Ignore" +
                    ")]\r\n        public ");
            
            #line 38 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ReturnType.FullName));
            
            #line default
            #line hidden
            this.Write(" Handle(");
            
            #line 38 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"
 GetMethodDefinitionParameters(Model); 
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n");
            
            #line 40 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"

        if (Model.HasReturnType())
        {

            
            #line default
            #line hidden
            this.Write("            return null;\r\n");
            
            #line 44 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\ServiceCallHandlerImplementationTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("        }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
        private global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost hostValue;
        /// <summary>
        /// The current host for the text templating engine
        /// </summary>
        public virtual global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost Host
        {
            get
            {
                return this.hostValue;
            }
            set
            {
                this.hostValue = value;
            }
        }
        
        #line 2 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"

void GetMethodDefinitionParameters(ServiceOperationModel o) 
{
	GetMethodDefinitionParameters(o, false);
}

void GetMethodDefinitionParameters(ServiceOperationModel o, bool withLeadingComma) 
{
	GetMethodDefinitionParameters(o.Parameters, withLeadingComma);
}

void GetMethodDefinitionParameters(List<ParameterModel> parameters, bool withLeadingComma) 
{
	    for(int i = 0; i < parameters.Count; i++) 
	{ 
		ParameterModel p = parameters[i];
		if (withLeadingComma || (!withLeadingComma && i != 0))
        {
			
        
        #line default
        #line hidden
        
        #line 20 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"
this.Write(", ");

        
        #line default
        #line hidden
        
        #line 20 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"

        } 
	
        
        #line default
        #line hidden
        
        #line 22 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(p.Type.FullName));

        
        #line default
        #line hidden
        
        #line 22 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 22 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(p.Name));

        
        #line default
        #line hidden
        
        #line 22 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"

	}	
}


        
        #line default
        #line hidden
        
        #line 28 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"


void GetMethodCallParameters(ServiceOperationModel o) 
{
	GetMethodCallParameters(o, false);
}

void GetMethodCallParameters(ServiceOperationModel o, bool withLeadingComma) 
{
	GetMethodCallParameters(o.Parameters, withLeadingComma);
}

void GetMethodCallParameters(List<ParameterModel> parameters, bool withLeadingComma)
{
    for(int i = 0; i < parameters.Count; i++) 
	{ 
		ParameterModel p = parameters[i];
		if (withLeadingComma || (!withLeadingComma && i != 0))
        {
			
        
        #line default
        #line hidden
        
        #line 47 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"
this.Write(", ");

        
        #line default
        #line hidden
        
        #line 47 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"

        } 
	
        
        #line default
        #line hidden
        
        #line 49 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(p.Name));

        
        #line default
        #line hidden
        
        #line 49 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"

	}

}

void GetMethodCallParameters(ServiceOperationModel o, bool withLeadingComma, string prefix)
{
	List<ParameterModel> parameters = o.Parameters;

    for(int i = 0; i < parameters.Count; i++) 
	{ 
		ParameterModel p = parameters[i];
		if (withLeadingComma || (!withLeadingComma && i != 0))
        {
			
        
        #line default
        #line hidden
        
        #line 63 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"
this.Write(", ");

        
        #line default
        #line hidden
        
        #line 63 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"

        } 

        
        #line default
        #line hidden
        
        #line 65 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(prefix + p.Name));

        
        #line default
        #line hidden
        
        #line 65 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.Application.ServiceCallHandlers\Legacy\ServiceCallHandler\./../Services.ttinclude"

	}
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}

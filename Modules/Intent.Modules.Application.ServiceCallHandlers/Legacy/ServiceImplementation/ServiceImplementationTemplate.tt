<#@ template  debug="true"  inherits="IntentRoslynProjectItemTemplateBase<ServiceModel>" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ Assembly Name="Intent.SoftwareFactory" #>
<#@ import namespace="Intent.SoftwareFactory.MetaModels.Class" #>
<#@ import namespace="Intent.SoftwareFactory.MetaModels.Service" #>
<#@ import namespace="Intent.SoftwareFactory.Templates" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ include file="./../Services.ttinclude" #> 
<#
#>

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Practices.Unity;
<#=DependencyUsings#>

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#=Namespace#>
{
    public class <#=ClassName#> : I<#=ClassName#>
    {
        private readonly IUnityContainer _container;

        public <#=ClassName#>(IUnityContainer container)
        { 
            _container = container;
        }

<#    foreach (var o in Model.Operations)
    {

#>        public <#= o.ReturnType.FullName #> <#= o.Name#>(<# GetMethodDefinitionParameters(o); #>)
        {
<#        foreach (var parameter in o.Parameters)
        {
            if (parameter.Type.TypeName.Contains("DTO") && parameter.Type.TypeName != "PagedSearchCriteriaDTO")
            {
#>            //<#= parameter.Name#>.Validate(true);
<#
            }
        }
#>            
            var sch = _container.Resolve<<#= o.Name#>SCH>();
            <#
        if (o.HasReturnType())
        {
#>return <#
        }
#>sch.Handle(<# GetMethodCallParameters(o); #>);
        } 

<#        
    }
#>

        #region IDisposable Members

        public void Dispose()
        {
            //dispose all resources
        }

        #endregion
    }
}
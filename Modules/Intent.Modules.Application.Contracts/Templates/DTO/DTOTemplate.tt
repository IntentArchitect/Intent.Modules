<#@ template  debug="true"  inherits="Intent.SoftwareFactory.Templates.IntentRoslynProjectItemTemplateBase<IDTOModel>" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="Intent.MetaModel.DTO" #>
<#@ import namespace="Intent.SoftwareFactory.Templates" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
<#=DependencyUsings#>

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    <#= ClassAttributes()#>
    public class <#=ClassName#> 
    {
        public <#=ClassName#>()
        {
        }

        public static <#= ClassName #> Create(<#= ConstructorParameters() #>) 
        {
            return new <#= ClassName #>
            {
<# foreach (var field in Model.Fields) {#>
                <#= field.Name.ToPascalCase() #> = <#= field.Name.ToCamelCase().PrefixIdentifierIfKeyword() #>,
<#}#>
            };
        }

<# foreach (var field in Model.Fields) {#>
        <#= PropertyAttributes(field)#>
        public <#= GetTypeInfo(field.TypeReference)#> <#=field.Name.ToPascalCase()#> {get; set;}
<#}#>
    }
}

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace Testing.Namespace
{
    public class TestClass
    {
        public void TestMethod(int value)
        {
            if (value == 0)
            {
                throw new InvalidArgumentException();
            }
            else if (value == 1)
            {
                return 1;
            }
            else
            {
                return 2;
            }

            // Object Init

            var obj = new SomeObject
            {
                LambdaProp = x =>
                {
                    return x + 1;
                },
                StringProp = "My string"
            };

            var dict = new Dictionary<string, string>
            {
                { "key1", "value 1" },
                { "key2", "value 2" }
            };

            using (var scope = service.GetScope())
            {
                scope.Dispose();
            }
            // New Scope
            {
            }

            foreach (var i in Enumerable.Range(1, 10))
            {
                Console.Write(i);
            }

            try
            {
                DoSomethingRisky();
            }
            catch (OutOfMemoryException ex)
            {
                // What to do?
            }
            catch
            {
                // Catch All
            }
            finally
            {
                DoFinallyStuff();
            }

            if (!string.IsNullOrWhiteSpace(configuration["KeyVault:TenantId"]) &&
                !string.IsNullOrWhiteSpace(configuration["KeyVault:ClientId"]) &&
                !string.IsNullOrWhiteSpace(configuration["KeyVault:Secret"]))
            {
                // If statement body
            }
            // block expression line 1
                // block expression line 2
                // block expression line 3
            {
            }
        }
    }
}
<#@ template language="C#" inherits="CSharpTemplateBase<Intent.ModuleBuilder.Java.Api.JavaFileTemplateModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.ModuleBuilder.Java.Api" #>
using System.Collections.Generic;
using Intent.Engine;
using Intent.Modules.Common;
using Intent.Modules.Common.Templates;
using Intent.Modules.Common.Java;
using Intent.Modules.Common.Java.Templates;
using Intent.RoslynWeaver.Attributes;
using Intent.Templates;

[assembly: DefaultIntentManaged(Mode.Merge)]

namespace <#= Namespace #>
{
    [IntentManaged(Mode.Merge, Signature = Mode.Fully)]
    <#= GetAccessModifier() #>class <#= ClassName #> : <#= string.Join(", ", GetBaseTypes()) #>
    {
        [IntentManaged(Mode.Fully)]
        public const string TemplateId = "<#= GetTemplateId() #>";

        [IntentManaged(Mode.Fully, Body = Mode.Ignore)]
        public <#= ClassName #>(IOutputTarget outputTarget, <#= GetModelType() #> model<#= Model.GetModelType() == null ? " = null" : ""#>) : base(TemplateId, outputTarget, model)
        {
<#  if (Model.GetJavaTemplateSettings()?.TemplatingMethod().IsJavaFileBuilder() == true) { #>
            JavaFile = new JavaFile(this.GetPackage(), this.GetFolderPath())
                .AddClass($"<#= GetClassName() #>", @class =>
                {
                    @class.AddConstructor(ctor =>
                    {
                        ctor.AddParameter("string", "exampleParam", param =>
                        {
                            param.IntroduceField();
                        });
                    });
                });
<#  } #>
        }
<#  if (Model.GetJavaTemplateSettings()?.TemplatingMethod().IsJavaFileBuilder() == true) { #>

        [IntentManaged(Mode.Fully)]
        public <#= UseType("Intent.Modules.Common.Java.Builder.JavaFile") #> JavaFile { get; }

        [IntentManaged(Mode.Fully)]
        public override ITemplateFileConfig GetTemplateFileConfig()
        {
            return JavaFile.GetConfig();
        }

        [IntentManaged(Mode.Fully)]
        public override string TransformText()
        {
            return JavaFile.ToString();
        }
<#  } else { #>

        [IntentManaged(Mode.Fully, Body = Mode.Ignore)]
        public override ITemplateFileConfig GetTemplateFileConfig()
        {
            return new JavaFileConfig(
                className: $"<#= Model.IsFilePerModelTemplateRegistration() ? "{Model.Name}" : Model.Name.Replace("Template", "") #>",
                package: this.GetPackage(),
                relativeLocation: this.GetFolderPath()
            );
        }
<#  } #>
<#  if (Model.GetJavaTemplateSettings()?.TemplatingMethod().IsCustom() == true) { #>

        [IntentManaged(Mode.Fully, Body = Mode.Ignore)]
        public override string TransformText()
        {
            throw new NotImplementedException("Implement custom template here");
        }
<#  } #>
    }
}
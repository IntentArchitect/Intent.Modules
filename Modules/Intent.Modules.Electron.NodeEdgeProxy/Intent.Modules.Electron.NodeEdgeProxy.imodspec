<?xml version="1.0" encoding="utf-8"?>
<package>
  <id>Intent.Electron.NodeEdgeProxy</id>
  <version>2.0.0</version>
  <summary>Creates service proxies allowing you to call C# code from within Node.js</summary>
  <description>Implements service contracts and infrastructure in both C# and TypeScript allowing C# service calls to be initiated from within a Node.js hosted Angular Application.</description>
  <authors>Intent Architect</authors>
  <templates>
    <template id="Intent.Electron.NodeEdgeProxy.AngularEdgeServiceProvider">
      <role>Presentation</role>
    </template>
    <template id="Intent.Electron.NodeEdgeProxy.AngularNodeEdgeTypeScriptServiceProxy">
      <role>Presentation</role>
    </template>
    <template id="Intent.Electron.NodeEdgeProxy.CsharpReceivingProxy">
      <role>Distribution</role>
    </template>
  </templates>
  <decorators/>
  <dependencies>
    <dependency id="Intent.Common" version="2.0.0"/>
    <dependency id="Intent.Application.ServiceCallHandlers" version="2.0.0"/>
    <dependency id="Intent.Application.Contracts" version="2.0.0"/>
    <dependency id="Intent.Unity" version="2.0.0"/>
    <dependency id="Intent.OutputManager.RoslynWeaver" version="2.0.0"/>
    <dependency id="Intent.Typescript.ServiceAgent.Contracts" version="2.0.0"/>
  </dependencies>
  <files>
    <file src="bin\$configuration$\$id$.dll"/>
    <file src="bin\$configuration$\$id$.pdb"/>
  </files>
</package>
<?xml version="1.0" encoding="utf-8"?>
<stereotypeDefinition id="7033e6f4-2a22-4357-bd65-f0ec06c516d5" version="3.1.0">
  <name>Module Settings</name>
  <targetMode>of-type</targetMode>
  <targetTypes>
    <type id="ef75f8f0-520c-4ab8-814f-5e75f4877dd7">Component Module</type>
  </targetTypes>
  <targetReferenceTypes />
  <applyMode>always</applyMode>
  <icon type="FontAwesome" source="cogs" />
  <displayIcon>false</displayIcon>
  <displayIconFunction>return false;</displayIconFunction>
  <displayFunction>let result = properties["Version"].value;

let options = [];

if (properties["Is Required"].value) {
    options.push("required");
}
else if (properties["Include By Default"].value) {
    options.push("include by default");
}

switch (properties["Include Assets"].value) {
    case "All":
        break;
    case "None":
        options.push("include assets: none")
        break;
    case "Select":
        const deserialized = JSON.parse(properties["Included Assets"].value);
        options.push(`include assets: ${deserialized.join(";")}`)
        break;
}

return options.length == 0
    ? properties["Version"].value
    : `${properties["Version"].value} [${options.join(", ")}]`
</displayFunction>
  <displayAsAnnotation>false</displayAsAnnotation>
  <displayAsText>true</displayAsText>
  <autoAdd>false</autoAdd>
  <allowMultipleApplies>false</allowMultipleApplies>
  <parentFolderId>62ad437e-2b3e-4db1-9a0a-c2da4fc211b7</parentFolderId>
  <order>0</order>
  <packageId>002e9a7f-e5b7-4392-a60f-b60ae4e86262</packageId>
  <packageName>Intent.ApplicationTemplate.Builder</packageName>
  <validateFunction>var moduleSettingsStereo = element.getStereotype("Module Settings");
var isRequired =  moduleSettingsStereo.getProperty("Is Required").getValue();
var includeByDefault =  moduleSettingsStereo.getProperty("Include By Default").getValue();

if (isRequired &amp;&amp; !includeByDefault) {    
    return "[Include by default] must be enabled when [s Required] is set to true."
}</validateFunction>
  <properties>
    <property id="8235e942-6dec-4576-be44-3543b35ca44c">
      <name>Version</name>
      <type>string</type>
      <controlType>text</controlType>
      <optionsSource>n/a</optionsSource>
      <isRequiredFunction>return true</isRequiredFunction>
    </property>
    <property id="860a2a3a-9812-4fff-acc6-b342ddb23f96">
      <name>Include By Default</name>
      <type>string</type>
      <controlType>checkbox</controlType>
      <optionsSource>n/a</optionsSource>
      <defaultValue>true</defaultValue>
    </property>
    <property id="42e43cfe-4073-4f7f-8a7e-ef79c150c8c7">
      <name>Is Required</name>
      <type>string</type>
      <controlType>checkbox</controlType>
      <optionsSource>n/a</optionsSource>
      <defaultValue>true</defaultValue>
    </property>
    <property id="4bdd0a51-5a47-4119-b0bb-cd1240ac7850">
      <name>Include Assets</name>
      <type>string</type>
      <controlType>select</controlType>
      <optionsSource>options</optionsSource>
      <defaultValue>[]</defaultValue>
      <valueOptions>
        <option>All</option>
        <option>None</option>
        <option>Select</option>
      </valueOptions>
    </property>
    <property id="478326e2-5290-428e-aef9-10f2c67f24c2">
      <name>Included Assets</name>
      <type>string</type>
      <controlType>multi-select</controlType>
      <optionsSource>options</optionsSource>
      <defaultValue>[]</defaultValue>
      <valueOptions>
        <option>Application Settings</option>
        <option>Designer Metadata</option>
        <option>Designers</option>
        <option>Factory Extensions</option>
        <option>Template Outputs</option>
      </valueOptions>
      <isActiveFunction>return properties["Include Assets"].value == "Select";</isActiveFunction>
      <isRequiredFunction>return true;</isRequiredFunction>
    </property>
  </properties>
</stereotypeDefinition>
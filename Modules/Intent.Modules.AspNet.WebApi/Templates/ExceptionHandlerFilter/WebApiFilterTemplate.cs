// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.AspNet.WebApi.Templates.ExceptionHandlerFilter
{
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules\Modules\Intent.Modules.AspNet.WebApi\Templates\ExceptionHandlerFilter\WebApiFilterTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class WebApiFilterTemplate : CSharpTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using Intent.RoslynWeaver.Attributes;\r\nusing System;\r\nusing System.Collections.Ge" +
                    "neric;\r\nusing System.Linq;\r\n");
            
            #line 10 "C:\Dev\Intent.Modules\Modules\Intent.Modules.AspNet.WebApi\Templates\ExceptionHandlerFilter\WebApiFilterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DependencyUsings));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n[assembly: DefaultIntentManaged(Mode.Merge)]\r\n\r\nnamespace ");
            
            #line 14 "C:\Dev\Intent.Modules\Modules\Intent.Modules.AspNet.WebApi\Templates\ExceptionHandlerFilter\WebApiFilterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public class ");
            
            #line 16 "C:\Dev\Intent.Modules\Modules\Intent.Modules.AspNet.WebApi\Templates\ExceptionHandlerFilter\WebApiFilterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" : ExceptionFilterAttribute\r\n    {\r\n        [IntentManaged(Mode.Ignore)]\r\n       " +
                    " public override void OnException(HttpActionExecutedContext actionExecutedContex" +
                    "t)\r\n        {\r\n            // Customize your response messages by inspecting \'ac" +
                    "tionExecutedContext.Exception\'\r\n            // for specific Exception types.\r\n  " +
                    "          // e.g.\r\n            // \r\n            // if (actionExecutedContext.Exc" +
                    "eption is ArgumentException)\r\n            // {\r\n            //    actionExecuted" +
                    "Context.Response = new HttpResponseMessage\r\n            //    {\r\n            // " +
                    "       StatusCode = HttpStatusCode.BadRequest,\r\n            //        Content = " +
                    "new StringContent(@\"{ \"\"message\"\": \"\"You have specified an invalid argument\"\" }\"" +
                    "),\r\n            //        ReasonPhrase = \"Invalid input supplied for service ope" +
                    "ration\"\r\n            //    };\r\n            //    return;\r\n            // }\r\n\r\n  " +
                    "          // Generic return message. Use this to mask internal errors so that co" +
                    "nsumers of your\r\n            // service cannot see what the technical details ar" +
                    "e.\r\n\r\n#if DEBUG\r\n            // This is purely for Developer convenience to get " +
                    "started. Please note that\r\n            // this is not the standard way for deplo" +
                    "ying code into production.\r\n            actionExecutedContext.Response = new Htt" +
                    "pResponseMessage\r\n            {\r\n                StatusCode = HttpStatusCode.Int" +
                    "ernalServerError,\r\n                Content = new StringContent($@\"{{ \"\"message\"\"" +
                    ": \"\"{actionExecutedContext.Exception.Message}\"\" }}\"),\r\n                ReasonPhr" +
                    "ase = \"An internal server error occurred\"\r\n            };\r\n#else\r\n            ac" +
                    "tionExecutedContext.Response = new HttpResponseMessage\r\n            {\r\n         " +
                    "       StatusCode = HttpStatusCode.InternalServerError,\r\n                Content" +
                    " = new StringContent(@\"{ \"\"message\"\": \"\"An internal server error occurred\"\" }\")," +
                    "\r\n                ReasonPhrase = \"An internal server error occurred\"\r\n          " +
                    "  };\r\n#endif\r\n        }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}

<?xml version="1.0" encoding="utf-8"?>
<class id="dd35ed32-76bb-4abf-a4e0-370f230765cf" type="Association Settings" typeId="16d21684-d5ea-4fde-b648-f88d292fa272">
  <name>Route Association</name>
  <display>Route Association</display>
  <isAbstract>false</isAbstract>
  <sort-children>by-type-then-by-name</sort-children>
  <genericTypes />
  <isMapped>false</isMapped>
  <parentFolderId>3f6cd7b9-04a8-4044-8f98-7bf380f7df3d</parentFolderId>
  <packageId>775b96aa-24f0-4348-a06a-ab62d463a582</packageId>
  <packageName>Intent.Metadata.ApiGateway</packageName>
  <stereotypes />
  <metadata />
  <childElements>
    <childElement id="4143dbe5-12ce-4705-ba69-2683c46b1b96" type="Association Source End Settings" typeId="32aac8b7-3eac-4a15-87cb-7fb98fdfdf37">
      <name>Upstream End</name>
      <display>Upstream End</display>
      <isAbstract>false</isAbstract>
      <genericTypes />
      <isMapped>false</isMapped>
      <parentFolderId>dd35ed32-76bb-4abf-a4e0-370f230765cf</parentFolderId>
      <packageId>775b96aa-24f0-4348-a06a-ab62d463a582</packageId>
      <packageName>Intent.Metadata.ApiGateway</packageName>
      <stereotypes>
        <stereotype stereotypeDefinitionId="5a410b57-e6a8-4567-b387-71a89290b2c9" name="Settings">
          <addedByDefault>true</addedByDefault>
          <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
          <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
          <properties>
            <property name="dc56596e-b1bd-40d1-ae5e-5aee967fed36" display="Icon" isActive="true" />
            <property name="763a1f02-cdc2-4b43-a763-5ff38d59af60" display="Target Types" value="[&quot;b09d7684-5dde-4d4b-9cb5-0707bfd8578f&quot;]" isActive="true" />
            <property name="fde5c705-2274-4536-9d47-62029793629d" display="Target Traits" value="[]" isActive="true" />
            <property name="b534060a-c8a3-4631-b4a9-db0baeecd1b3" display="Api Property Name" value="UpstreamEndpoints" isActive="true" />
            <property name="65b99db7-ec8e-408d-a0fd-a98245d1fbcc" display="Display Text Function" value="" isActive="true" />
            <property name="f2b3038c-188e-4777-833b-15969e3923d7" display="Validate Function" value="" isActive="true" />
            <property name="6bf94b78-382a-4002-ac88-a569b59e16e6" display="Name Accessibility" value="Hidden" isActive="true" />
            <property name="5e68cf49-e0f7-461a-8f5a-436a5ec91060" display="Default Name Function" value="" isActive="true" />
            <property name="2d07ed88-82bf-4d30-9280-1488f0f927e0" display="Name Must Be Unique" value="false" isActive="true" />
            <property name="c81dddd3-8e13-4fe9-b923-1ad339b30746" display="Is Navigable Enabled" value="false" isActive="true" />
            <property name="9419ab85-5421-4b54-82f2-da502a9651d6" display="Is Nullable Enabled" value="false" isActive="true" />
            <property name="9b861271-feb0-4d57-ae86-7e053ed441ae" display="Is Collection Enabled" value="false" isActive="true" />
            <property name="18131f3e-1c29-4c21-a32a-3946204d0d29" display="Is Navigable Default" value="false" isActive="true" />
            <property name="b1f32c0b-f45f-4cdb-9a4e-ff989f9111e0" display="Is Nullable Default" value="false" isActive="true" />
            <property name="bb49808b-06e1-45f1-9f6b-08dede577305" display="Is Collection Default" value="false" isActive="true" />
            <property name="c8c2530e-8048-40aa-838c-7c5d870d492b" display="Allow Set Value" value="false" isActive="true" />
            <property name="77a800bb-e76a-4b1d-bbc1-32cf7baed608" display="Allow Multiple" value="false" isActive="true" />
            <property name="a9703eab-0aa4-4c3f-ab68-f9ccba205e5a" display="Allow Sorting" value="false" isActive="true" />
            <property name="9ae87826-7f34-4cab-b371-5cd2da9331dd" display="Sort Children" isActive="true" />
          </properties>
        </stereotype>
      </stereotypes>
      <metadata />
      <childElements />
    </childElement>
    <childElement id="17084378-a3d8-4233-b275-c856eea4dd61" type="Association Destination End Settings" typeId="c4c61fdc-464d-41d2-8e0e-5a734d588302">
      <name>Downstream End</name>
      <display>Downstream End</display>
      <isAbstract>false</isAbstract>
      <sort-children>by-type-then-by-name</sort-children>
      <genericTypes />
      <isMapped>false</isMapped>
      <parentFolderId>dd35ed32-76bb-4abf-a4e0-370f230765cf</parentFolderId>
      <packageId>775b96aa-24f0-4348-a06a-ab62d463a582</packageId>
      <packageName>Intent.Metadata.ApiGateway</packageName>
      <stereotypes>
        <stereotype stereotypeDefinitionId="5a410b57-e6a8-4567-b387-71a89290b2c9" name="Settings">
          <addedByDefault>true</addedByDefault>
          <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
          <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
          <properties>
            <property name="dc56596e-b1bd-40d1-ae5e-5aee967fed36" display="Icon" isActive="true" />
            <property name="763a1f02-cdc2-4b43-a763-5ff38d59af60" display="Target Types" value="[&quot;ccf14eb6-3a55-4d81-b5b9-d27311c70cb9&quot;,&quot;e71b0662-e29d-4db2-868b-8a12464b25d0&quot;,&quot;e030c97a-e066-40a7-8188-808c275df3cb&quot;]" isActive="true" />
            <property name="fde5c705-2274-4536-9d47-62029793629d" display="Target Traits" value="[]" isActive="true" />
            <property name="b534060a-c8a3-4631-b4a9-db0baeecd1b3" display="Api Property Name" value="DownstreamEndpoints" isActive="true" />
            <property name="65b99db7-ec8e-408d-a0fd-a98245d1fbcc" display="Display Text Function" value="" isActive="true" />
            <property name="f2b3038c-188e-4777-833b-15969e3923d7" display="Validate Function" value="" isActive="true" />
            <property name="6bf94b78-382a-4002-ac88-a569b59e16e6" display="Name Accessibility" value="Hidden" isActive="true" />
            <property name="5e68cf49-e0f7-461a-8f5a-436a5ec91060" display="Default Name Function" value="return &quot;[call]&quot;;" isActive="true" />
            <property name="2d07ed88-82bf-4d30-9280-1488f0f927e0" display="Name Must Be Unique" value="false" isActive="true" />
            <property name="c81dddd3-8e13-4fe9-b923-1ad339b30746" display="Is Navigable Enabled" value="false" isActive="true" />
            <property name="9419ab85-5421-4b54-82f2-da502a9651d6" display="Is Nullable Enabled" value="false" isActive="true" />
            <property name="9b861271-feb0-4d57-ae86-7e053ed441ae" display="Is Collection Enabled" value="false" isActive="true" />
            <property name="18131f3e-1c29-4c21-a32a-3946204d0d29" display="Is Navigable Default" value="true" isActive="true" />
            <property name="b1f32c0b-f45f-4cdb-9a4e-ff989f9111e0" display="Is Nullable Default" value="false" isActive="true" />
            <property name="bb49808b-06e1-45f1-9f6b-08dede577305" display="Is Collection Default" value="false" isActive="true" />
            <property name="c8c2530e-8048-40aa-838c-7c5d870d492b" display="Allow Set Value" value="false" isActive="true" />
            <property name="77a800bb-e76a-4b1d-bbc1-32cf7baed608" display="Allow Multiple" value="false" isActive="true" />
            <property name="a9703eab-0aa4-4c3f-ab68-f9ccba205e5a" display="Allow Sorting" value="false" isActive="true" />
            <property name="9ae87826-7f34-4cab-b371-5cd2da9331dd" display="Sort Children" isActive="true" />
          </properties>
        </stereotype>
      </stereotypes>
      <metadata />
      <childElements>
        <childElement id="426bb1b3-eb94-46c0-ae12-1c00b65a8315" type="Context Menu" typeId="d45e383d-90ba-4b64-aca7-34ca100cea21">
          <name>[context menu]</name>
          <display>[context menu]</display>
          <isAbstract>false</isAbstract>
          <sort-children>manually</sort-children>
          <genericTypes />
          <isMapped>false</isMapped>
          <parentFolderId>17084378-a3d8-4233-b275-c856eea4dd61</parentFolderId>
          <packageId>775b96aa-24f0-4348-a06a-ab62d463a582</packageId>
          <packageName>Intent.Metadata.ApiGateway</packageName>
          <stereotypes />
          <metadata />
          <childElements>
            <childElement id="39fa4a9f-b966-4734-b7e5-308749c41133" type="Mapping Option" typeId="00a1eb98-1fc4-4421-9d1c-8733f6bc2111">
              <name>Add Route Mapping</name>
              <display>Add Route Mapping: Route Mapping</display>
              <isAbstract>false</isAbstract>
              <genericTypes />
              <typeReference id="5649c6dc-2495-40de-a7b3-1d184a1cd89d">
                <typeId>48776d2f-ee28-4738-844f-d2ee610b516f</typeId>
                <isNavigable>true</isNavigable>
                <isNullable>false</isNullable>
                <isCollection>false</isCollection>
                <isRequired>true</isRequired>
                <typePackageName>Intent.Metadata.ApiGateway</typePackageName>
                <typePackageId>775b96aa-24f0-4348-a06a-ab62d463a582</typePackageId>
                <stereotypes />
                <genericTypeParameters />
              </typeReference>
              <isMapped>false</isMapped>
              <parentFolderId>426bb1b3-eb94-46c0-ae12-1c00b65a8315</parentFolderId>
              <packageId>775b96aa-24f0-4348-a06a-ab62d463a582</packageId>
              <packageName>Intent.Metadata.ApiGateway</packageName>
              <stereotypes>
                <stereotype stereotypeDefinitionId="6c209f86-87f6-4fc3-802e-e6e553dfbeca" name="Option Settings">
                  <comment />
                  <addedByDefault>true</addedByDefault>
                  <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
                  <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
                  <properties>
                    <property name="69d929bc-dcd7-4c2d-aabc-6f05ab6d83b3" display="Shortcut" isActive="true" />
                    <property name="36d5eeba-2483-450e-b51b-b156836f6d3a" display="Shortcut (macOS)" isActive="true" />
                    <property name="e92b2832-9ed6-4ccb-bf58-8b34975c16dc" display="Trigger On Double-Click" value="false" isActive="true" />
                    <property name="5e97216b-6c99-4fa2-971d-575a27f212cc" display="Icon" isActive="true" />
                    <property name="63039244-aaad-49eb-84bf-0396a6dd0fe9" display="Is Option Visible Function" isActive="true" />
                    <property name="08fac0bc-4cf9-45ec-8362-e452a185efee" display="Order" isActive="true" />
                    <property name="d0b53563-f62e-4989-98d5-69ff87f460f3" display="Top Divider" value="false" isActive="true" />
                    <property name="1bb3ebe0-6015-42e1-b1ca-29b7e53c0d56" display="Bottom Divider" value="false" isActive="true" />
                  </properties>
                </stereotype>
              </stereotypes>
              <metadata />
              <childElements />
            </childElement>
          </childElements>
        </childElement>
      </childElements>
    </childElement>
    <childElement id="7dcd827d-e325-4a14-82fb-31640a8ce8ad" type="Association Event Settings" typeId="1bdee938-8569-4fbf-84b4-8522d2cbee32">
      <name>NewAssociationEventSettings</name>
      <display>[events]</display>
      <isAbstract>false</isAbstract>
      <sort-children>by-type-then-by-name</sort-children>
      <genericTypes />
      <isMapped>false</isMapped>
      <parentFolderId>dd35ed32-76bb-4abf-a4e0-370f230765cf</parentFolderId>
      <packageId>775b96aa-24f0-4348-a06a-ab62d463a582</packageId>
      <packageName>Intent.Metadata.ApiGateway</packageName>
      <stereotypes />
      <metadata />
      <childElements>
        <childElement id="fab34874-40c6-41ff-9c55-7fc1acbf09d7" type="Association Event Handler" typeId="f9b3e6fd-3c51-4ed9-b214-cb7f5fc1cf7c">
          <name>On Changed</name>
          <display>On Changed: Inline Script</display>
          <isAbstract>false</isAbstract>
          <genericTypes />
          <typeReference id="bc393802-476a-4683-afb3-67351aed7192">
            <typeId>043eee26-1591-42ac-9f2c-fc911b070eb1</typeId>
            <isNavigable>true</isNavigable>
            <isNullable>false</isNullable>
            <isCollection>false</isCollection>
            <isRequired>true</isRequired>
            <typePackageName>Intent.ModuleBuilder</typePackageName>
            <typePackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</typePackageId>
            <stereotypes />
            <genericTypeParameters />
          </typeReference>
          <isMapped>false</isMapped>
          <parentFolderId>7dcd827d-e325-4a14-82fb-31640a8ce8ad</parentFolderId>
          <packageId>775b96aa-24f0-4348-a06a-ab62d463a582</packageId>
          <packageName>Intent.Metadata.ApiGateway</packageName>
          <stereotypes>
            <stereotype stereotypeDefinitionId="1f88f1ac-b96a-4ae7-9047-883c2fa3b3df" name="Script Settings">
              <addedByDefault>true</addedByDefault>
              <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
              <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
              <properties>
                <property name="d418d372-ae82-4852-81b1-20b78a26eb6c" display="Script" value="function getMethodAndRoute(element) {&#xD;&#xA;    // Get custom settings&#xD;&#xA;    const customSettings = element.getStereotype(&quot;Http Settings&quot;);&#xD;&#xA;    const customRoute = customSettings?.getProperty(&quot;Route&quot;)?.getValue() || &quot;&quot;;&#xD;&#xA;    const customMethod = customSettings?.getProperty(&quot;Verb&quot;)?.getValue() || &quot;&quot;;&#xD;&#xA;&#xD;&#xA;    // Get HTTP settings&#xD;&#xA;    const endpoints = element.getAssociations(&quot;Route Association&quot;)&#xD;&#xA;        .map(x =&gt; x.typeReference.getType())&#xD;&#xA;        .filter(x =&gt; x);&#xD;&#xA;&#xD;&#xA;    if (endpoints.length === 0) {&#xD;&#xA;        return { method: &quot;&quot;, route: &quot;&quot;, result: &quot;None&quot; };&#xD;&#xA;    }&#xD;&#xA;    if (endpoints.length &gt; 1) {&#xD;&#xA;        return { method: &quot;&quot;, route: &quot;&quot;, result: &quot;Aggregate&quot; };&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const httpSettings = endpoints[0].getStereotype(&quot;Http Settings&quot;);&#xD;&#xA;    const httpMethod = httpSettings.getProperty(&quot;Verb&quot;).getValue();&#xD;&#xA;    let httpRoute = httpSettings.getProperty(&quot;Route&quot;).getValue();&#xD;&#xA;&#xD;&#xA;    if (endpoints[0].getParent()?.hasStereotype(&quot;Http Service Settings&quot;)) {&#xD;&#xA;        let serviceRoute = endpoints[0].getParent().getStereotype(&quot;Http Service Settings&quot;)?.getProperty(&quot;Route&quot;)?.getValue() || &quot;&quot;;&#xD;&#xA;        const haveSlash = httpRoute &amp;&amp; httpRoute.length &gt; 0 ? &quot;/&quot; : &quot;&quot;;&#xD;&#xA;        httpRoute = `${serviceRoute}${haveSlash}${httpRoute}`;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    // Use custom values if available, otherwise fall back to HTTP settings&#xD;&#xA;    return {&#xD;&#xA;        verb: customMethod || httpMethod,&#xD;&#xA;        route: customRoute || httpRoute,&#xD;&#xA;        result: null&#xD;&#xA;    };&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function isForBody(field) {&#xD;&#xA;    let operation = field.getParent();&#xD;&#xA;    let httpSettingsRoute = operation.getStereotype(&quot;Http Settings&quot;)?.getProperty(&quot;Route&quot;).getValue();&#xD;&#xA;    let paramSource = field.getStereotype(&quot;Parameter Settings&quot;)?.getProperty(&quot;Source&quot;)?.getValue();&#xD;&#xA;    if (!paramSource || paramSource == &quot;Default&quot;) {&#xD;&#xA;        return httpSettingsRoute.toLowerCase().indexOf(`{${field.getName().toLowerCase()}}`) &lt;= 0;&#xD;&#xA;    }&#xD;&#xA;    return paramSource == &quot;Body&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function syncDownstreamContract(source, target) {&#xD;&#xA;    let bodyFields = target.getChildren(&quot;DTO-Field&quot;).filter(x =&gt; isForBody(x));&#xD;&#xA;    // If there are no body fields, nothing to do&#xD;&#xA;    if (!bodyFields || bodyFields.length === 0) {&#xD;&#xA;        return;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Get the parent of the source (where we'll create the new DTO)&#xD;&#xA;    const sourceParent = source.getParent();&#xD;&#xA;    &#xD;&#xA;    // Check if there's already a DTO with the upstream metadata matching the source ID&#xD;&#xA;    let existingDto = null;&#xD;&#xA;    sourceParent.getChildren().forEach(child =&gt; {&#xD;&#xA;        if (child.hasMetadata(&quot;upstream&quot;) &amp;&amp; child.getMetadata(&quot;upstream&quot;) === source.id) {&#xD;&#xA;            existingDto = child;&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // Use existing DTO or create a new one&#xD;&#xA;    let dto;&#xD;&#xA;    if (existingDto) {&#xD;&#xA;        dto = existingDto;&#xD;&#xA;        // Clear existing fields to update with fresh ones&#xD;&#xA;        existingDto.getChildren(&quot;DTO-Field&quot;).forEach(field =&gt; field.delete());&#xD;&#xA;    } else {&#xD;&#xA;        // Create a new DTO with name based on source&#xD;&#xA;        const dtoName = target.getName();&#xD;&#xA;        dto = createElement(&quot;DTO&quot;, dtoName, sourceParent.id);&#xD;&#xA;        // Add metadata to track relationship with source&#xD;&#xA;        dto.addMetadata(&quot;upstream&quot;, source.id);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Copy the body fields into the DTO&#xD;&#xA;    bodyFields.forEach(field =&gt; {&#xD;&#xA;        const newField = createElement(&quot;DTO-Field&quot;, field.getName(), dto.id);&#xD;&#xA;        newField.addMetadata(&quot;upstream&quot;, source.id);&#xD;&#xA;        &#xD;&#xA;        // Copy properties from the original field&#xD;&#xA;        if (field.typeReference?.getTypeId()) {&#xD;&#xA;            newField.typeReference.setType(field.typeReference.getTypeId());&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    let bodyField = source.getChildren(&quot;DTO-Field&quot;).filter(x =&gt; x.getName() == &quot;Body&quot;)[0];&#xD;&#xA;    &#xD;&#xA;    // Create a new Body field if it doesn't exist&#xD;&#xA;    if (!bodyField) {&#xD;&#xA;        bodyField = createElement(&quot;DTO-Field&quot;, &quot;Body&quot;, source.id);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Set the type reference to the DTO&#xD;&#xA;    bodyField.typeReference.setType(dto.id);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;let source = association.getOtherEnd().typeReference.getType();&#xD;&#xA;let target = association.typeReference.getType();&#xD;&#xA;&#xD;&#xA;if (!source) {&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;if (source.getAssociations(&quot;Route Association&quot;).length === 0) {&#xD;&#xA;    source.setName(`DetachedGatewayRoute`, true);&#xD;&#xA;} else if (source.getAssociations(&quot;Route Association&quot;).length &gt; 1) {&#xD;&#xA;    source.setName(`AggregateGatewayRoute`, true);&#xD;&#xA;} else if (target) {&#xD;&#xA;    source.setName(`${target.getName()}GatewayRoute`);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;if (target) {&#xD;&#xA;    const { verb, route, result } = getMethodAndRoute(source);&#xD;&#xA;&#xD;&#xA;    const HttpSettings = &quot;b4581ed2-42ec-4ae2-83dd-dcdd5f0837b6&quot;;&#xD;&#xA;&#xD;&#xA;    let httpSettings = source.getStereotype(HttpSettings);&#xD;&#xA;    if (!httpSettings) {&#xD;&#xA;        httpSettings = source.addStereotype(HttpSettings);&#xD;&#xA;    }&#xD;&#xA;    httpSettings.getProperty(&quot;Route&quot;).setValue(route);&#xD;&#xA;    httpSettings.getProperty(&quot;Verb&quot;).setValue(verb);&#xD;&#xA;&#xD;&#xA;    syncDownstreamContract(source, target);&#xD;&#xA;} else {&#xD;&#xA;    const HttpSettings = &quot;b4581ed2-42ec-4ae2-83dd-dcdd5f0837b6&quot;;&#xD;&#xA;&#xD;&#xA;    let httpSettings = source.getStereotype(HttpSettings);&#xD;&#xA;    if (httpSettings) {&#xD;&#xA;        source.removeStereotype(HttpSettings);&#xD;&#xA;    }&#xD;&#xA;}" isActive="true" />
                <property name="7d1114d8-e27d-4cb8-b5d5-3fd75bf7dea1" display="Dependencies" value="[]" isActive="true" />
              </properties>
            </stereotype>
          </stereotypes>
          <metadata />
          <childElements />
        </childElement>
        <childElement id="58fec7c8-dc55-4a17-ac8b-7e0a2c98df8e" type="Association Event Handler" typeId="f9b3e6fd-3c51-4ed9-b214-cb7f5fc1cf7c">
          <name>On Deleted</name>
          <display>On Deleted: Inline Script</display>
          <isAbstract>false</isAbstract>
          <genericTypes />
          <typeReference id="b0d65508-893c-4289-9312-de31e073d18a">
            <typeId>043eee26-1591-42ac-9f2c-fc911b070eb1</typeId>
            <isNavigable>true</isNavigable>
            <isNullable>false</isNullable>
            <isCollection>false</isCollection>
            <isRequired>true</isRequired>
            <typePackageName>Intent.ModuleBuilder</typePackageName>
            <typePackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</typePackageId>
            <stereotypes />
            <genericTypeParameters />
          </typeReference>
          <isMapped>false</isMapped>
          <parentFolderId>7dcd827d-e325-4a14-82fb-31640a8ce8ad</parentFolderId>
          <packageId>775b96aa-24f0-4348-a06a-ab62d463a582</packageId>
          <packageName>Intent.Metadata.ApiGateway</packageName>
          <stereotypes>
            <stereotype stereotypeDefinitionId="1f88f1ac-b96a-4ae7-9047-883c2fa3b3df" name="Script Settings">
              <addedByDefault>true</addedByDefault>
              <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
              <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
              <properties>
                <property name="d418d372-ae82-4852-81b1-20b78a26eb6c" display="Script" value="let source = association.getOtherEnd().typeReference.getType();&#xD;&#xA;let target = association.typeReference.getType();&#xD;&#xA;&#xD;&#xA;if (!source) {&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;if (source.getAssociations(&quot;Route Association&quot;).length === 0) {&#xD;&#xA;    source.setName(`DetachedGatewayRoute`, true);&#xD;&#xA;} else if (source.getAssociations(&quot;Route Association&quot;).length &gt; 1) {&#xD;&#xA;    source.setName(`AggregateGatewayRoute`, true);&#xD;&#xA;} else if (target) {&#xD;&#xA;    source.setName(`${target.getName()}GatewayRoute`);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;const HttpSettings = &quot;b4581ed2-42ec-4ae2-83dd-dcdd5f0837b6&quot;;&#xD;&#xA;    &#xD;&#xA;let httpSettings = source.getStereotype(HttpSettings);&#xD;&#xA;if (httpSettings) {&#xD;&#xA;    source.removeStereotype(HttpSettings);&#xD;&#xA;}" isActive="true" />
                <property name="7d1114d8-e27d-4cb8-b5d5-3fd75bf7dea1" display="Dependencies" isActive="true" />
              </properties>
            </stereotype>
          </stereotypes>
          <metadata />
          <childElements />
        </childElement>
      </childElements>
    </childElement>
  </childElements>
</class>
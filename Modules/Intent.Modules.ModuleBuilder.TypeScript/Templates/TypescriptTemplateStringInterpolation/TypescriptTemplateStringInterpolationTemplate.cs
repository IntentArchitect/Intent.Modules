//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:8.0.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intent.Modules.ModuleBuilder.TypeScript.Templates.TypescriptTemplateStringInterpolation {
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    
    public partial class TypescriptTemplateStringInterpolationTemplate : CSharpTemplateBase<Intent.ModuleBuilder.TypeScript.Api.TypescriptFileTemplateModel> {
        
        public override string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 10 ""
            this.Write("using System;\r\nusing System.Collections.Generic;\r\n\r\n[assembly: DefaultIntentManag" +
                    "ed(Mode.Fully)]\r\n\r\nnamespace ");
            
            #line default
            #line hidden
            
            #line 15 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Namespace ));
            
            #line default
            #line hidden
            
            #line 15 ""
            this.Write("\r\n{\r\n    [IntentManaged(Mode.Fully, Body = Mode.Merge)]\r\n    public partial class" +
                    " ");
            
            #line default
            #line hidden
            
            #line 18 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ClassName ));
            
            #line default
            #line hidden
            
            #line 18 ""
            this.Write("\r\n    {\r\n        [IntentManaged(Mode.Fully, Body = Mode.Ignore)]\r\n        public " +
                    "override string TransformText()\r\n        {\r\n            return $@\"export ");
            
            #line default
            #line hidden
            
            #line 23 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( IsForInterface() ? "interface" : "class" ));
            
            #line default
            #line hidden
            
            #line 23 ""
            this.Write(" {ClassName} {{{string.Join(Environment.NewLine, GetMembers())}\r\n}}\r\n\";\r\n        " +
                    "}\r\n\r\n        [IntentInitialGen] private IEnumerable<string> GetMembers()\r\n      " +
                    "  {\r\n            var members = new List<string>();\r\n");
            
            #line default
            #line hidden
            
            #line 31 ""
  if (!IsForInterface()) { 
            
            #line default
            #line hidden
            
            #line 32 ""
            this.Write("\r\n            // example: adding a constructor\r\n            members.Add($@\"\r\n    " +
                    "constructor() {{\r\n    }}\");\r\n");
            
            #line default
            #line hidden
            
            #line 37 ""
  }
            
            #line default
            #line hidden
            
            #line 38 ""
            this.Write("            return members;\r\n        }\r\n    }\r\n}");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public override void Initialize() {
            base.Initialize();
        }
    }
}

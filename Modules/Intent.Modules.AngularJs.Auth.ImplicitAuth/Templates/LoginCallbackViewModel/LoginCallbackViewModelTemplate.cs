// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.AngularJs.Auth.ImplicitAuth.Templates.LoginCallbackViewModel
{
    using Intent.SoftwareFactory.Templates;
    using System;
    using System.IO;
    using System.Diagnostics;
    using System.Linq;
    using System.Collections;
    using System.Collections.Generic;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.AngularJs.Auth.ImplicitAuth\Templates\LoginCallbackViewModel\LoginCallbackViewModelTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class LoginCallbackViewModelTemplate : IntentProjectItemTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(" \r\n");
            
            #line 13 "C:\Dev\Intent\IntentArchitect\Modules\Intent.Modules.AngularJs.Auth.ImplicitAuth\Templates\LoginCallbackViewModel\LoginCallbackViewModelTemplate.tt"




            
            #line default
            #line hidden
            this.Write(@"'use strict';
namespace App.Auth {
    export class LoginCallbackViewModel implements IViewModel {
        static $inject = [""$stateParams"", ""$rootScope"", ""$state"", ""OidcTokenManager"", ""UserInfoService""];

        constructor(
            private $stateParams: any,
            private $rootScope: ng.IRootScopeService,
            private $state: ng.ui.IStateService,
            private oidcTokenManager: Oidc.OidcTokenManager,
            private userInfoService: UserInfoService) {

            var hash = $stateParams.response;
            if (hash.charAt(0) === ""&"") {
                hash = hash.substr(1);
            }

            oidcTokenManager.processTokenCallbackAsync(hash).then(() => {
                this.userInfoService.loadFromProfile(oidcTokenManager.profile);
                $state.go(""shell.worklist"");
            }, error => {
                this.$rootScope.$apply(() => {
                    this.errors = (error && error.message) ? error.message : error;
                    if (this.errors === ""No request state loaded"" && !oidcTokenManager.expired) {
                        $state.go(""shell.worklist"");
                    }
                });
            });
        }

        errors: string;

        dispose = () => {}
    }
}");
            return this.GenerationEnvironment.ToString();
        }
        private global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost hostValue;
        /// <summary>
        /// The current host for the text templating engine
        /// </summary>
        public virtual global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost Host
        {
            get
            {
                return this.hostValue;
            }
            set
            {
                this.hostValue = value;
            }
        }
    }
    
    #line default
    #line hidden
}

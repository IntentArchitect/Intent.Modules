// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.TypeScript.Weaving.Decorators.Templates.IntentDecorators
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.TypeScript.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class IntentDecoratorsTemplate : TypeScriptTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\nexport const ");
            
            #line 11 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentIgnore));
            
            #line default
            #line hidden
            this.Write(" = (identifier?: string) => {\r\n  return (target: any, propertyKey?: string, descr" +
                    "iptor?: any) => {\r\n  }\r\n}\r\n\r\nexport interface ");
            
            #line 16 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentIgnore));
            
            #line default
            #line hidden
            this.Write(" {\r\n\r\n}\r\n\r\nexport const ");
            
            #line 20 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentIgnoreBody));
            
            #line default
            #line hidden
            this.Write(" = (identifier?: string) => {\r\n  return (target: any, propertyKey?: string, descr" +
                    "iptor?: any) => {\r\n  }\r\n}\r\n\r\nexport interface ");
            
            #line 25 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentIgnoreBody));
            
            #line default
            #line hidden
            this.Write(" {\r\n\r\n}\r\n\r\nexport const ");
            
            #line 29 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentMerge));
            
            #line default
            #line hidden
            this.Write(" = (identifier?: string) => {\r\n  return (target: any, propertyKey?: string, descr" +
                    "iptor?: any) => {\r\n  }\r\n}\r\nexport interface ");
            
            #line 33 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentMerge));
            
            #line default
            #line hidden
            this.Write(" {\r\n\r\n}\r\n\r\nexport const ");
            
            #line 37 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentManage));
            
            #line default
            #line hidden
            this.Write(" = (identifier?: string) => {\r\n  return (target: any, propertyKey?: string, descr" +
                    "iptor?: any) => {\r\n  }\r\n}\r\nexport interface ");
            
            #line 41 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentManage));
            
            #line default
            #line hidden
            this.Write(" {\r\n\r\n}\r\n\r\nexport const ");
            
            #line 45 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentManageClass));
            
            #line default
            #line hidden
            this.Write(" = (identifier?: string) => {\r\n  return (target: any, propertyKey?: string, descr" +
                    "iptor?: any) => {\r\n  }\r\n}\r\nexport interface ");
            
            #line 49 "C:\Dev\Intent.Modules\Modules\Intent.Modules.TypeScript.Weaving.Decorators\Templates\IntentDecorators\IntentDecoratorsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IntentManageClass));
            
            #line default
            #line hidden
            this.Write(" {\r\n\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}

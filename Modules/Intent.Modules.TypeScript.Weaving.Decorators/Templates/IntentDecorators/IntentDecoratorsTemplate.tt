<#@ template language="C#" inherits="TypeScriptTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>

export const <#= IntentIgnore #> = (identifier?: string) => {
  return (target: any, propertyKey?: string, descriptor?: any) => {
  }
}

export interface <#= IntentIgnore #> {

}

export const <#= IntentIgnoreBody #> = (identifier?: string) => {
  return (target: any, propertyKey?: string, descriptor?: any) => {
  }
}

export interface <#= IntentIgnoreBody #> {

}

export const <#= IntentMerge #> = (identifier?: string) => {
  return (target: any, propertyKey?: string, descriptor?: any) => {
  }
}
export interface <#= IntentMerge #> {

}

export const <#= IntentManage #> = (identifier?: string) => {
  return (target: any, propertyKey?: string, descriptor?: any) => {
  }
}
export interface <#= IntentManage #> {

}

export const <#= IntentManageClass #> = (identifier?: string) => {
  return (target: any, propertyKey?: string, descriptor?: any) => {
  }
}
export interface <#= IntentManageClass #> {

}

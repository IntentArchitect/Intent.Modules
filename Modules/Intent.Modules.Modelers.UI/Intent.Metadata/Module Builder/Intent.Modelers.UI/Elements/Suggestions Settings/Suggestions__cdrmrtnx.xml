<?xml version="1.0" encoding="utf-8"?>
<class id="3e111ea5-474c-4e27-bfa0-6f4701329027" type="Suggestions Settings" typeId="f68b5446-19f2-402d-a940-f62b3a592906">
  <name>Suggestions</name>
  <display>Suggestions</display>
  <isAbstract>false</isAbstract>
  <sort-children>by-type-then-by-name</sort-children>
  <genericTypes />
  <isMapped>false</isMapped>
  <parentFolderId>444f582b-b875-4c72-9671-697b47fa367c</parentFolderId>
  <packageId>5c4628ec-679e-4f3d-afda-137c978deae0</packageId>
  <packageName>Intent.Modelers.UI</packageName>
  <stereotypes />
  <metadata />
  <childElements>
    <childElement id="a6639515-249e-49fb-bd5f-8176435dfa6f" type="Suggestion" typeId="0c21ab10-e87b-4e88-ab44-38ea7adf514a">
      <name>Add to Sider Menu</name>
      <display>Add to Sider Menu: Component</display>
      <isAbstract>false</isAbstract>
      <genericTypes />
      <typeReference id="36630279-8115-4905-9c75-67cb0f4b9d96">
        <typeId>b1c481e1-e91e-4c29-9817-00ab9cad4b6b</typeId>
        <isNavigable>true</isNavigable>
        <isNullable>false</isNullable>
        <isCollection>false</isCollection>
        <isRequired>true</isRequired>
        <typePackageName>Intent.Modelers.UI</typePackageName>
        <typePackageId>5c4628ec-679e-4f3d-afda-137c978deae0</typePackageId>
        <stereotypes />
        <genericTypeParameters />
      </typeReference>
      <isMapped>false</isMapped>
      <parentFolderId>3e111ea5-474c-4e27-bfa0-6f4701329027</parentFolderId>
      <packageId>5c4628ec-679e-4f3d-afda-137c978deae0</packageId>
      <packageName>Intent.Modelers.UI</packageName>
      <stereotypes>
        <stereotype stereotypeDefinitionId="daf7d9b3-9c10-4286-b30e-7edb2e62f10e" name="Settings">
          <addedByDefault>true</addedByDefault>
          <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
          <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
          <properties>
            <property name="bd242929-b399-4d13-88c0-d046b7161d41" display="Locations" value="[&quot;Diagram&quot;,&quot;Model&quot;]" isActive="true" />
            <property name="8d51eb08-f4a9-4703-ba70-de87c9417d46" display="Filter Function" value="const associationIds = [&#xD;&#xA;  &quot;2b191288-ecae-4743-b069-cbdd927ef349&quot;,// Navigation Specialization Type&#xD;&#xA;];&#xD;&#xA;const layoutSpecializationTypeId = &quot;776a9393-6b23-4a8c-8937-fd7e833fa0ef&quot;;&#xD;&#xA;&#xD;&#xA;if (lookupTypesOf(layoutSpecializationTypeId).length &gt; 0){&#xD;&#xA;&#xD;&#xA;return element.hasStereotype(&quot;ea4adc09-8978-4ede-ba5f-265debb2b60c&quot;)// Page&#xD;&#xA;  &amp;&amp; !lookupTypesOf(associationIds).some(a =&gt; &#xD;&#xA;    a.typeReference.getType().id == element.id &amp;&amp; &#xD;&#xA;    a.getOtherEnd().typeReference.getType().specializationId == layoutSpecializationTypeId);//Layout&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//If there are no modeled Layouts dont show suggestion&#xD;&#xA;return false;" isActive="true" />
            <property name="ecb7abbb-0297-486e-bd99-cded3226d2a4" display="Display Function" isActive="true" />
            <property name="bbf03fa4-5beb-4d27-a24f-9858af08d97f" display="Icon" isActive="true" />
            <property name="bfd10a66-2f93-4ffd-bf35-633ff96e7e6c" display="Script" value="const layoutSpecializationTypeId = &quot;5c8a19cf-410b-4ded-930e-446c3fc9bc26&quot;;&#xD;&#xA;const navigationMenuTypeId = &quot;d7282bf2-1626-4b8b-9446-1d530527db06&quot;;&#xD;&#xA;const siderTypeId = &quot;c505f35f-7148-46a3-a812-d9f53a174490&quot;;&#xD;&#xA;&#xD;&#xA;let menus = lookupTypesOf(navigationMenuTypeId);&#xD;&#xA;let siderMenu = menus.find(x =&gt; x.getParent(siderTypeId));&#xD;&#xA;let layout = siderMenu.getParent().getParent();&#xD;&#xA;&#xD;&#xA;let button = createElement(&quot;Menu Item&quot;, toTitleCase(element.getName()), siderMenu.id);&#xD;&#xA;let navAssociation = createAssociation(&quot;Navigation&quot;, layout.id, button.id);&#xD;&#xA;navAssociation.typeReference.setType(element.id);&#xD;&#xA;&#xD;&#xA;let mapping = layout.getAdvancedMapping(&quot;c33f86ad-423a-4a6f-a80c-a3206eafe5cd&quot;);// View Bindings&#xD;&#xA;let targetPath = [layout.id, siderMenu.getParent().id, siderMenu.id, button.id, &quot;a4073b81-6ddd-44cb-909f-f2c97d965112&quot;];//LinkTo&#xD;&#xA;mapping.addMappedEnd(&quot;Event Mapping&quot;&#xD;&#xA;, [layout.id, navAssociation.id ]&#xD;&#xA;, targetPath);&#xD;&#xA;mapping.addMappingExpression(targetPath, &quot;{&quot; + navAssociation.getName() + &quot;}&quot;);" isActive="true" />
            <property name="1d9dd994-46c3-4fdc-a24b-c69f689ca283" display="Dependencies" isActive="true" />
            <property name="eb1aad5a-4eb8-46aa-84a0-9e4fec251d84" display="Order Priority" isActive="true" />
          </properties>
        </stereotype>
      </stereotypes>
      <metadata />
      <childElements />
    </childElement>
    <childElement id="360aa2c8-c680-4784-8dd1-8d34ff325be9" type="Suggestion" typeId="0c21ab10-e87b-4e88-ab44-38ea7adf514a">
      <name>Call Backend Service</name>
      <display>Call Backend Service: Component</display>
      <isAbstract>false</isAbstract>
      <genericTypes />
      <typeReference id="b32733c0-e33c-4ef6-9199-18ec0ccdc033">
        <typeId>b1c481e1-e91e-4c29-9817-00ab9cad4b6b</typeId>
        <isNavigable>true</isNavigable>
        <isNullable>false</isNullable>
        <isCollection>false</isCollection>
        <isRequired>true</isRequired>
        <typePackageName>Intent.Modelers.UI</typePackageName>
        <typePackageId>5c4628ec-679e-4f3d-afda-137c978deae0</typePackageId>
        <stereotypes />
        <genericTypeParameters />
      </typeReference>
      <isMapped>false</isMapped>
      <parentFolderId>3e111ea5-474c-4e27-bfa0-6f4701329027</parentFolderId>
      <packageId>5c4628ec-679e-4f3d-afda-137c978deae0</packageId>
      <packageName>Intent.Modelers.UI</packageName>
      <stereotypes>
        <stereotype stereotypeDefinitionId="daf7d9b3-9c10-4286-b30e-7edb2e62f10e" name="Settings">
          <addedByDefault>true</addedByDefault>
          <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
          <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
          <properties>
            <property name="bd242929-b399-4d13-88c0-d046b7161d41" display="Locations" value="[&quot;Diagram&quot;,&quot;Model&quot;]" isActive="true" />
            <property name="8d51eb08-f4a9-4703-ba70-de87c9417d46" display="Filter Function" isActive="true" />
            <property name="ecb7abbb-0297-486e-bd99-cded3226d2a4" display="Display Function" isActive="true" />
            <property name="bbf03fa4-5beb-4d27-a24f-9858af08d97f" display="Icon" isActive="true" />
            <property name="bfd10a66-2f93-4ffd-bf35-633ff96e7e6c" display="Script" value="/// &lt;reference path=&quot;ui-common.ts&quot; /&gt;&#xD;&#xA;&#xD;&#xA;function addViewModel(contract, component, mapping, ...suffixesToRemove) {&#xD;&#xA;&#xD;&#xA;    if (!contract) return;&#xD;&#xA;&#xD;&#xA;    if (!component.getChildren(&quot;Property&quot;).some(x =&gt; x.typeReference.getType().specialization == &quot;Model Definition&quot; &amp;&amp; x.getName() == &quot;Model&quot;)) {&#xD;&#xA;        const newModel = component.addChild(&quot;Model Definition&quot;, removePrefix(removeSuffix(contract.getName(), ...suffixesToRemove)) + &quot;Model&quot;)&#xD;&#xA;        const newProperty = component.addChild(&quot;Property&quot;, &quot;Model&quot;);&#xD;&#xA;        newProperty.typeReference.setType(newModel.id);&#xD;&#xA;        if (contract.getName().startsWith(&quot;Create&quot;)) {&#xD;&#xA;            newProperty.setValue(&quot;new()&quot;);&#xD;&#xA;        } else {&#xD;&#xA;            newProperty.typeReference.setIsNullable(true);&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        addChildElementsRecursively(newModel, contract, component, mapping, [newProperty.id], [contract.id]);&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function addChildElementsRecursively(model, contract, component, mapping, srcPath, dstPath) {&#xD;&#xA;    contract.getChildren(&quot;DTO-Field&quot;).forEach(field =&gt; {&#xD;&#xA;&#xD;&#xA;        const modelProperty = model.addChild(&quot;Property&quot;, field.getName());&#xD;&#xA;        const nextSrcPath = srcPath.concat(modelProperty.id);&#xD;&#xA;        const nextDstPath = dstPath.concat(field.id);&#xD;&#xA;&#xD;&#xA;        if (field.typeReference?.getType()?.specialization == &quot;DTO&quot;) {&#xD;&#xA;            const complexChildType = component.addChild(&quot;Model Definition&quot;, removePrefix(removeSuffix(field.typeReference.getType().getName(), &quot;DTO&quot;, &quot;Dto&quot;)) + &quot;Model&quot;)&#xD;&#xA;            modelProperty.typeReference.setType(complexChildType.id);&#xD;&#xA;            modelProperty.typeReference.setIsNullable(field.typeReference.isNullable)&#xD;&#xA;            modelProperty.typeReference.setIsCollection(field.typeReference.isCollection)&#xD;&#xA;            if (field.typeReference.isCollection) {&#xD;&#xA;                mapping.addMappedEnd(&quot;ce70308a-e29d-4644-8410-f9e6bbd214fc&quot;, nextSrcPath, nextDstPath);&#xD;&#xA;            }&#xD;&#xA;            addChildElementsRecursively(complexChildType, field.typeReference.getType(), component, mapping, nextSrcPath, nextDstPath);&#xD;&#xA;        } else {&#xD;&#xA;            modelProperty.typeReference.setType(field.typeReference.toModel());&#xD;&#xA;            mapping.addMappedEnd(&quot;ce70308a-e29d-4644-8410-f9e6bbd214fc&quot;, nextSrcPath, nextDstPath);&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;async function execute() {&#xD;&#xA;    const result = await dialogService.openForm({&#xD;&#xA;        title: &quot;Call Backend Service&quot;,&#xD;&#xA;        fields: [&#xD;&#xA;            {&#xD;&#xA;                id: &quot;selectedElementIds&quot;,&#xD;&#xA;                label: &quot;Select Elements&quot;,&#xD;&#xA;                fieldType: &quot;tree-view&quot;,&#xD;&#xA;                treeViewOptions: {&#xD;&#xA;                    rootId: element.getPackage().id,&#xD;&#xA;                    isMultiSelect: true,&#xD;&#xA;                    submitFormTriggers: [&quot;double-click&quot;, &quot;enter&quot;],&#xD;&#xA;                    hasFilter: true,&#xD;&#xA;                    selectableTypes: [&#xD;&#xA;                        { specializationId: &quot;Command&quot;, autoExpand: true, isSelectable: (x) =&gt; true },&#xD;&#xA;                        { specializationId: &quot;Query&quot;, autoExpand: true, isSelectable: (x) =&gt; true },&#xD;&#xA;                        { specializationId: &quot;Operation&quot;, autoExpand: true, isSelectable: (x) =&gt; x.getParent().specialization == &quot;Service&quot; },&#xD;&#xA;                    ],&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        ]&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    if (result.selectedElementIds.length == 0) {&#xD;&#xA;        return;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const component = element;&#xD;&#xA;&#xD;&#xA;    result.selectedElementIds.forEach(selectedElementId =&gt; {&#xD;&#xA;&#xD;&#xA;        const serviceRequest = lookup(selectedElementId);&#xD;&#xA;&#xD;&#xA;        if (!serviceRequest) {&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        BackendServiceHelperApi.setupCallServiceFromComponent(component, serviceRequest, result.selectedElementIds.length == 1);&#xD;&#xA;    });&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;await execute();&#xD;&#xA;" isActive="true" />
            <property name="1d9dd994-46c3-4fdc-a24b-c69f689ca283" display="Dependencies" value="[&quot;5bd2a61d-7aaa-4785-90fa-376796ccb6c8&quot;]" isActive="true" />
            <property name="eb1aad5a-4eb8-46aa-84a0-9e4fec251d84" display="Order Priority" isActive="true" />
          </properties>
        </stereotype>
      </stereotypes>
      <metadata />
      <childElements />
    </childElement>
    <childElement id="2a751403-563c-4842-b2c0-bb6096bc3866" type="Suggestion" typeId="0c21ab10-e87b-4e88-ab44-38ea7adf514a">
      <name>Make Route Parameter</name>
      <display>Make Route Parameter: Property</display>
      <isAbstract>false</isAbstract>
      <genericTypes />
      <typeReference id="1f40ed3a-155f-4fd0-b224-5f4989d20585">
        <typeId>356fbe17-bc63-4e16-b915-feefbc063cbe</typeId>
        <isNavigable>true</isNavigable>
        <isNullable>false</isNullable>
        <isCollection>false</isCollection>
        <isRequired>true</isRequired>
        <typePackageName>Intent.Modelers.UI</typePackageName>
        <typePackageId>5c4628ec-679e-4f3d-afda-137c978deae0</typePackageId>
        <stereotypes />
        <genericTypeParameters />
      </typeReference>
      <isMapped>false</isMapped>
      <parentFolderId>3e111ea5-474c-4e27-bfa0-6f4701329027</parentFolderId>
      <packageId>5c4628ec-679e-4f3d-afda-137c978deae0</packageId>
      <packageName>Intent.Modelers.UI</packageName>
      <stereotypes>
        <stereotype stereotypeDefinitionId="daf7d9b3-9c10-4286-b30e-7edb2e62f10e" name="Settings">
          <addedByDefault>true</addedByDefault>
          <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
          <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
          <properties>
            <property name="bd242929-b399-4d13-88c0-d046b7161d41" display="Locations" value="[&quot;Diagram&quot;,&quot;Model&quot;]" isActive="true" />
            <property name="8d51eb08-f4a9-4703-ba70-de87c9417d46" display="Filter Function" value="if (!element.hasStereotype(&quot;f324c4ea-bac2-450d-b1b1-cc7f09ca3472&quot;) // Route Parameter&#xD;&#xA;    &amp;&amp; idIdentityType(element) &#xD;&#xA;    &amp;&amp; element.getName().toLowerCase().endsWith(&quot;id&quot;)){&#xD;&#xA;    return true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return false;&#xD;&#xA;&#xD;&#xA;function idIdentityType(element){    &#xD;&#xA;    const primitiveTypeIds = new Set([&#xD;&#xA;        &quot;6b649125-18ea-48fd-a6ba-0bfff0d8f488&quot;, // guid&#xD;&#xA;        &quot;fb0a362d-e9e2-40de-b6ff-5ce8167cbe74&quot;, // int&#xD;&#xA;        &quot;33013006-E404-48C2-AC46-24EF5A5774FD&quot;, // long&#xD;&#xA;        &quot;d384db9c-a279-45e1-801e-e4e8099625f2&quot; // string&#xD;&#xA;    ]);&#xD;&#xA;    if (element.typeReference){&#xD;&#xA;        return primitiveTypeIds.has(element.typeReference.typeId);&#xD;&#xA;    }&#xD;&#xA;    return false;&#xD;&#xA;}" isActive="true" />
            <property name="ecb7abbb-0297-486e-bd99-cded3226d2a4" display="Display Function" isActive="true" />
            <property name="bbf03fa4-5beb-4d27-a24f-9858af08d97f" display="Icon" isActive="true" />
            <property name="bfd10a66-2f93-4ffd-bf35-633ff96e7e6c" display="Script" value="element.addStereotype(&quot;f324c4ea-bac2-450d-b1b1-cc7f09ca3472&quot;);" isActive="true" />
            <property name="1d9dd994-46c3-4fdc-a24b-c69f689ca283" display="Dependencies" isActive="true" />
            <property name="eb1aad5a-4eb8-46aa-84a0-9e4fec251d84" display="Order Priority" isActive="true" />
          </properties>
        </stereotype>
      </stereotypes>
      <metadata />
      <childElements />
    </childElement>
    <childElement id="2555eb9a-da0c-463b-9dec-07cc753bb4d0" type="Suggestion" typeId="0c21ab10-e87b-4e88-ab44-38ea7adf514a">
      <name>Re-map Service Call</name>
      <display>Re-map Service Call: Call Service Operation Action Target End</display>
      <isAbstract>false</isAbstract>
      <genericTypes />
      <typeReference id="1310ab16-e404-49a7-9ea9-e0a2755cf03d">
        <typeId>475f0810-2b4a-40da-8eb8-697cb62f7dbe</typeId>
        <isNavigable>true</isNavigable>
        <isNullable>false</isNullable>
        <isCollection>false</isCollection>
        <isRequired>true</isRequired>
        <typePackageName>Intent.Modelers.UI</typePackageName>
        <typePackageId>5c4628ec-679e-4f3d-afda-137c978deae0</typePackageId>
        <stereotypes />
        <genericTypeParameters />
      </typeReference>
      <isMapped>false</isMapped>
      <parentFolderId>3e111ea5-474c-4e27-bfa0-6f4701329027</parentFolderId>
      <packageId>5c4628ec-679e-4f3d-afda-137c978deae0</packageId>
      <packageName>Intent.Modelers.UI</packageName>
      <stereotypes>
        <stereotype stereotypeDefinitionId="daf7d9b3-9c10-4286-b30e-7edb2e62f10e" name="Settings">
          <addedByDefault>true</addedByDefault>
          <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
          <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
          <properties>
            <property name="bd242929-b399-4d13-88c0-d046b7161d41" display="Locations" value="[&quot;Diagram&quot;,&quot;Model&quot;]" isActive="true" />
            <property name="8d51eb08-f4a9-4703-ba70-de87c9417d46" display="Filter Function" value="return typeof(element.hasErrors) == &quot;function&quot; &amp;&amp; (element.hasErrors() || element.hasWarnings());" isActive="true" />
            <property name="ecb7abbb-0297-486e-bd99-cded3226d2a4" display="Display Function" isActive="true" />
            <property name="bbf03fa4-5beb-4d27-a24f-9858af08d97f" display="Icon" isActive="true" />
            <property name="bfd10a66-2f93-4ffd-bf35-633ff96e7e6c" display="Script" value="BackendServiceHelperApi.remapServiceCall(element);&#xD;&#xA;" isActive="true" />
            <property name="1d9dd994-46c3-4fdc-a24b-c69f689ca283" display="Dependencies" value="[&quot;5bd2a61d-7aaa-4785-90fa-376796ccb6c8&quot;]" isActive="true" />
            <property name="eb1aad5a-4eb8-46aa-84a0-9e4fec251d84" display="Order Priority" isActive="true" />
          </properties>
        </stereotype>
      </stereotypes>
      <metadata />
      <childElements />
    </childElement>
  </childElements>
</class>
<#@ template language="C#" inherits="CSharpTemplateBase<Intent.ModuleBuilder.Api.TemplateDecoratorContractModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using Intent.Templates;

[assembly: DefaultIntentManaged(Mode.Ignore)]

namespace <#= Namespace #>
{
    [IntentManaged(Mode.Merge, Signature = Mode.Fully)]
    public abstract class <#= ClassName #> : ITemplateDecorator
    {
        public int Priority { get; protected set; } = 0;

    }
}
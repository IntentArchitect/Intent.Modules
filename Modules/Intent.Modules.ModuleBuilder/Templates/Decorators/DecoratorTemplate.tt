<#@ template language="C#" inherits="IntentRoslynProjectItemTemplateBase<IDecoratorDefinition>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modules.ModuleBuilder.Api" #>
<#@ import namespace="Intent.Modules.ModuleBuilder.Helpers" #>
using System;
using System.Collections.Generic;
using Intent.SoftwareFactory.Engine;
<#=DependencyUsings#>
[assembly: DefaultIntentManaged(Mode.Merge)]

namespace <#= Namespace #>
{
    [IntentManaged(Mode.Merge, Body = Mode.Merge, Signature = Mode.Fully)]
    public class <#= ClassName #> : <#= Model.GetImplementerDecoratorContractType() #><#= GetConfiguredInterfaces() #>
    {
        public const string Identifier = "<#= GetIdentifier() #>";

        private readonly IApplication _application;

        public <#= ClassName #>(IApplication application)
        {
            _application = application;
        }

<#  if (HasDeclaresUsings()) { #>
        [IntentManaged(Mode.Merge, Body = Mode.Ignore, Signature = Mode.Fully)]
        public IEnumerable<string> DeclareUsings()
        {
            return new string[]
            {
                // Specify list of Namespaces here, example:
                "System.Linq"
            };
        }
<#  } #>
    }
}
<#@ template language="C#" inherits="CSharpTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.ModuleBuilder.Api" #>
using Intent.Modules.Common.Templates;
using System.Collections.Generic;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
<#  foreach(var template in Templates)
    {
        var templateModel = ((TemplateRegistrationModel) template.Model); #>
<#      if (templateModel.IsSingleFileTemplateRegistration()) { #>
        public static string Get<#= templateModel.Name #>Name<T>(this IntentTemplateBase<T> template)
        {
            return template.GetTypeName(<#= GetTypeName(template.Id, templateModel) #>.TemplateId);
        }

<#      } #>
<#      else { #>
        public static string Get<#= templateModel.Name #>Name<T>(this IntentTemplateBase<T> template) where T: <#= template.GetModelType() #>
        {
            return template.GetTypeName(<#= GetTypeName(template.Id, templateModel) #>.TemplateId, template.Model);
        }

<#      } #>
<#  } #>
    }
}
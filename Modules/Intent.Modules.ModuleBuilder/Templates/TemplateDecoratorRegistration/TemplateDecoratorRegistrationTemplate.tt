<#@ template language="C#" inherits="CSharpTemplateBase<Intent.ModuleBuilder.Api.TemplateDecoratorModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using System.ComponentModel;
using Intent.Engine;
using Intent.Modules.Common.Registrations;

[assembly: DefaultIntentManaged(Mode.Merge)]

namespace <#= Namespace #>
{
    [Description(<#= GetDecoratorTypeName() #>.DecoratorId)]
    public class <#= ClassName #> : DecoratorRegistration<<#= GetTemplateTypeName() #>, <#= GetDecoratorContractTypeName() #>>
    {
        public override <#= GetDecoratorContractTypeName() #> CreateDecoratorInstance(<#= GetTemplateTypeName() #> template, IApplication application)
        {
            return new <#= GetDecoratorTypeName() #>(template, application);
        }

        public override string DecoratorId => <#= GetDecoratorTypeName() #>.DecoratorId;
    }
}
<#@ template language="C#" inherits="IntentRoslynProjectItemTemplateBase<AssociationSettingsModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modules.ModuleBuilder.Api" #>
using System.Collections.Generic;
using System.Linq;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
<#  foreach(var targetType in Model.SourceEnd.TargetTypes()) {  #>
        [IntentManaged(Mode.Fully)]
        public static IList<<#= Model.SourceEnd.ApiModelName #>> <#= Model.SourceEnd.ApiPropertyName #>(this <#= targetType.ApiModelName #> model)
        {
            return model.InternalElement.AssociatedElements
                .Where(x => x.Association.SpecializationType == <#= Model.ApiModelName #>.SpecializationType && x.IsSourceEnd())
                .Select(x => <#= Model.ApiModelName #>.CreateFromEnd(x))
                .ToList();
        }

<#  }  #>
<#  foreach(var targetType in Model.DestinationEnd.TargetTypes()) {  #>
        [IntentManaged(Mode.Fully)]
        public static IList<<#= Model.DestinationEnd.ApiModelName #>> <#= Model.DestinationEnd.ApiPropertyName #>(this <#= targetType.ApiModelName #> model)
        {
            return model.InternalElement.AssociatedElements
                .Where(x => x.Association.SpecializationType == <#= Model.ApiModelName #>.SpecializationType && x.IsTargetEnd())
                .Select(x => <#= Model.ApiModelName #>.CreateFromEnd(x))
                .ToList();
        }
    }

<#  }  #>
}
<#@ template language="C#" inherits="CSharpTemplateBase<IList<Intent.ModuleBuilder.Api.PackageSettingsModel>>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.ModuleBuilder.Api" #>
using System.Collections.Generic;
using System.Linq;
using Intent.Metadata.Models;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
<#  foreach(var packageSettings in Model) { #>
        public static IList<<#= GetClassName(packageSettings) #>> Get<#= GetClassName(packageSettings).ToPluralName() #>(this IDesigner designer)
        {
            return designer.GetPackagesOfType(<#= GetClassName(packageSettings) #>.SpecializationTypeId)
                .Select(x => new <#= GetClassName(packageSettings) #>(x))
                .ToList();
        }

        public static bool Is<#= GetClassName(packageSettings) #>(this IPackage package)
        {
            return package?.SpecializationTypeId == <#= GetClassName(packageSettings) #>.SpecializationTypeId;
        }

<#  } #>

    }
}
<#@ template language="C#" inherits="CSharpTemplateBase<IList<Intent.ModuleBuilder.Api.ElementSettingsModel>>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.ModuleBuilder.Api" #>
using System.Collections.Generic;
using System.Linq;
using Intent.Engine;
using Intent.Metadata.Models;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
<#  foreach(var elementSettings in Model) { #>
        public static IList<<#= GetClassName(elementSettings) #>> Get<#= GetClassName(elementSettings).ToPluralName() #>(this IDesigner designer)
        {
            return designer.GetElementsOfType(<#= GetClassName(elementSettings) #>.SpecializationTypeId)
                .Select(x => new <#= GetClassName(elementSettings) #>(x))
                .ToList();
        }

<#  } #>
    }
}
<#@ template language="C#" inherits="CSharpTemplateBase<TemplateRegistrationModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.ModuleBuilder.Api" #>
<#@ import namespace="Intent.ModuleBuilder.Helpers" #>

using System;
using System.Collections.Generic;
using System.Linq;
using Intent.Metadata.Models;
using Intent.Modules.Common;
using Intent.Modules.Common.Registrations;
using Intent.RoslynWeaver.Attributes;
using Intent.Engine;
using Intent.Registrations;
using Intent.Templates;

[assembly: DefaultIntentManaged(Mode.Merge)]

namespace <#= Namespace #>
{
	[IntentManaged(Mode.Merge, Body = Mode.Merge, Signature = Mode.Fully)]
    public class <#= ClassName #> : ITemplateRegistration
    {
        private readonly IMetadataManager _metadataManager;

        public <#= ClassName #>(IMetadataManager metadataManager)
        {
            _metadataManager = metadataManager;
        }

        public string TemplateId =>  <#= GetTemplateNameForTemplateId() #>.TemplateId;

        public void DoRegistration(ITemplateInstanceRegistry registery, IApplication applicationManager)
        {
            registery.Register(TemplateId, project => new <#= GetTemplateNameForTemplateId() #>(project, null));
        }
    }
}
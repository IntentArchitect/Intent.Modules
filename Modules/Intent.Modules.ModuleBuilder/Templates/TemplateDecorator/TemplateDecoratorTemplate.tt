<#@ template language="C#" inherits="CSharpTemplateBase<Intent.ModuleBuilder.Api.TemplateDecoratorModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using Intent.Engine;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    [IntentManaged(Mode.Merge)]
    public class <#= ClassName #> : <#= GetTypeName(Model) #>
    {
        [IntentManaged(Mode.Fully)]
        public const string DecoratorId = "<#= GetDecoratorId() #>";

        [IntentManaged(Mode.Fully)]
        private readonly <#= GetTemplateTypeName() #> _template;
        [IntentManaged(Mode.Fully)]
        private readonly IApplication _application;

        [IntentManaged(Mode.Fully, Body = Mode.Fully)]
        public <#= ClassName #>(<#= GetTemplateTypeName() #> template, IApplication application)
        {
            _template = template;
            _application = application;
        }
    }
}
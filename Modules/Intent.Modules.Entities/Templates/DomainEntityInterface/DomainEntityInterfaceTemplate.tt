<#@ template  debug="true" hostSpecific="true" inherits="IntentRoslynProjectItemTemplateBase<IClass>" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ Assembly Name="Intent.SoftwareFactory" #>
<#@ import namespace="Intent.MetaModel.Domain" #>
<#@ import namespace="Intent.SoftwareFactory.Templates" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic"#>
using System;
using System.Collections.Generic;
using Intent.Framework.Domain; 
using Intent.Framework.Core;
using Intent.CodeGen;
<#= DependencyUsings #>

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
<#= InterfaceAnnotations(Model) #>
    public partial interface I<#= ClassName #><#= GetInterfaces(Model) #>
    {
<#  foreach (var attribute in Model.Attributes)
    {
#>
<#= PropertyAnnotations(attribute) #>
        <#= attribute.Type(GetDecorators()) #> <#= attribute.Name.ToPascalCase() #> { get; }
<#  }

	foreach (var associatedClass in Model.AssociatedClasses)
    {#><# 	
		if (!associatedClass.IsNavigable) 
		{
			continue;
        }
#>
<#= PropertyAnnotations(associatedClass) #>
        <#= associatedClass.Type() #> <#= associatedClass.Name().ToPascalCase() #> { get; }
<#  }#>
    }
}

<#@ template  debug="true"  inherits="IntentRoslynProjectItemTemplateBase<IClass>" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ Assembly Name="Intent.SoftwareFactory" #>
<#@ import namespace="Intent.MetaModel.Domain" #>
<#@ import namespace="Intent.SoftwareFactory.Templates" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Linq;
using System.Threading.Tasks;
using Intent.Framework.Core.Context;
using Intent.Framework.Domain.Repositories;
using Intent.Framework.EntityFrameworkCore;
using Intent.Framework.EntityFrameworkCore.Repositories;
using Microsoft.EntityFrameworkCore;
<#= DependencyUsings #>

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    [IntentManaged(Mode.Merge)]
	public class <#= ClassName #> : RepositoryBase<<#= EntityInterfaceName #>, <#= EntityName #>, <#= DbContextName #>>, <#= RepositoryContractName #>
    {
        public <#= ClassName #>(<#= DbContextName #> dbContext) : base (dbContext)
        {
        }

        public <#= EntityInterfaceName #> FindById(Guid id)
        {
            return CreateQuery().SingleOrDefault(x => x.Id == id);
        }

        public async Task<<#= EntityInterfaceName #>> FindByIdAsync(Guid id)
        {
            return await CreateQuery().SingleOrDefaultAsync(x => x.Id == id);
        }
    }
}
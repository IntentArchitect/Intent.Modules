<#@ template  debug="true" inherits="IntentTypescriptProjectItemTemplateBase<ViewStateModel>"#>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ Assembly Name="Intent.SoftwareFactory" #>
<#@ import namespace="Intent.SoftwareFactory.Templates" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#


#>
// NOTE: NB! This is an R&D Module.
namespace <#= Namespace #> {
    export class <#= ClassName #> {

        constructor(state: I<#= ClassName #>State) {
        }
        
        dispose = () => {
        }
    }

    export interface I<#= ClassName #>State {
<#	foreach(var command in Model.Commands) {#>
		<#= command.Name #>Command: ICommand;
<#	} #>
    }
}
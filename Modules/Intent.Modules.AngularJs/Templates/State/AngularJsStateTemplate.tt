<#@ template  debug="true" hostSpecific="true" inherits="IntentTypescriptProjectItemTemplateBase<ViewStateModel>"#>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ Assembly Name="Intent.SoftwareFactory" #>
<#@ import namespace="Intent.SoftwareFactory.Templates" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#


#>
'use strict';
namespace <#= Namespace #> {
    export class <#= ClassName #> implements ng.ui.IState {
        static state = () => <ng.ui.IState>{
            url: "<#= Url #>",
            templateUrl: "App/States/<#= Model.Name #>/<#= Model.Name #>View.html",
            resolve: {
                viewModel: ["<#= ClassName #>",
                    (manager: <#= ClassName #>) => {
                        return new <#= ViewModelName #>();
                    }
                ]
            },
            controller: [
                "$scope", "viewModel", ($scope: ng.IScope, viewModel: <#= ViewModelName #>) => {
                    (<any>$scope).vm = viewModel;
                    $scope.$on("$destroy", () => viewModel.dispose());
                }
            ]
        };

        static $inject = [];
        constructor() { 
        }
    }

    angular.module("App").service("<#= ClassName #>", <#= ClassName #>);
}